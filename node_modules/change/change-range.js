import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
// import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';
import './css/jquery-style.js';
Dazzle.loadScript("https://code.jquery.com/jquery-1.12.4.js");
let $ = window.$;
Dazzle.loadScript("https://code.jquery.com/ui/1.12.1/jquery-ui.js");
Dazzle.loadStyle("//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css");
console.log('Window',window);


class dzElm extends PolymerElement {
  static get properties () {
    return {
    
        id: {
            "type": String
        },
        "query": {
            "type": Array
        },
        "data1": {
            "type": Number
        },
        "data2": {
            "type": Number
        }
    };
  }

  constructor() {
    super();
    // this.innerHTML = 
    // `
    // <p>
    // <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
    //     <vaadin-button on-click="_reset">重設</vaadin-button>
    // </p>
    
    // <div id="slider-range"></div>

    // `;

  }
  ready() {
      super.ready();

      let that = this;
      let shadow = this.shadowRoot;
      let sliderRange = shadow.querySelector('#slider-range');
      this.slider = $(sliderRange);
      let amount = shadow.querySelector('#amount');
      // $( sliderRange ).slider({
      //     range: true,
      //     min: 0,
      //     max: 5000,
      //     values: [ 75, 300 ],
      //     slide: function( event, ui ) {
      //         that.slide(ui);
      //     }
      // });
      this.getMaxPrice().then(max=>{
          console.log('Max Price',max);
          that.setSlider(0,max);
      });


      $(sliderRange).on('slidestop',function(){

          let start = $(this).slider( "values", 0 );
          let end = $(this).slider( "values", 1);

          console.log('Select Change',start,end);
          Dazzle.dzFire('select-range', {
              'detail': {
                  'start':  start,
                  'end': end 
              }
          })
      });
}
getMaxPrice(){
    console.log('Max Price');
    let that = this;
    let dbUrl = "https://search-dazzle-n4kjr6eecpjbne65ypunb42isu.ap-southeast-1.es.amazonaws.com/change.product/_search?size=0";
    let params = {
        "aggs" : {
            "max_price" : { "max" : { "field" : "price" } }
        }
    };
    return new Promise((resolve, reject) => {
        Dazzle.postData(dbUrl,params).then(res=>{
            
            try {
               let max_price = res['aggregations']['max_price']['value']; 
               that.allMaxPrice = max_price;
               resolve(max_price);
            } catch(e){
                console.log('Max Price Reject');
                reject();
            }

        });              
    }); 
}
test() {
    console.log("great");
}
_reset(){
    Dazzle.dzFire('reset-range', {
            'detail': {
            }
        })
}
setSlider(min,max){
    console.log('Set Slider',min,max);
    let that = this;
    let shadow = this.shadowRoot;
    let sliderRange = shadow.querySelector('#slider-range');
    this.slider = $(sliderRange);
    let amount = shadow.querySelector('#amount');
    $( sliderRange ).slider({
        range: true,
        min: min,
        max: max,
        values: [ min, max ],
        slide: function( event, ui ) {
            that.slide(ui);
        }
    });
    $( amount ).val( "$" + $( sliderRange).slider( "values", 0 ) +
    " - $" + $( sliderRange ).slider( "values", 1 ) );
}
slide(ui){
    let amount = this.shadowRoot.querySelector('#amount');
    $( amount ).val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
}

// static get template(){
//     return html `
//         <style include="jquery-style"></style>
//         <slot></slot>
//     `;
// }
  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style include="jquery-style">

        </style>
        <style>

        .ui-widget.ui-widget-content {
            border: 1px solid #c5c5c5;
            height: 8px;
            border-radius: 8px;
        }

        .ui-widget-header {
            background: #f0846c;
        }

        .ui-slider-horizontal .ui-slider-handle {
            top: -.3em;
            margin-left: -.6em;
            border-radius: 50%;
            width: 15px;
            height: 15px;
        }


        .min { grid-area: min; 
        float: left;
        }
        .max { 
            grid-area: max; 
            justify-self: end;
            
            }
        .ranger { grid-area: ranger; 
        text-align: center;}
         
         #container{
             display: grid;
             grid-template-areas:
             'min max'
             'ranger ranger';
             }
             .container {
                width: 90%;
            }
            
            .slider-labels {
                margin-top: 10px;
            }
            
            .noUi-target,
            .noUi-target * {
                -webkit-touch-callout: none;
                -webkit-user-select: none;
                -ms-touch-action: none;
                touch-action: none;
                -ms-user-select: none;
                -moz-user-select: none;
                user-select: none;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }
            
            .noUi-target {
                position: relative;
                direction: ltr;
            }
            
            .noUi-base {
                width: 100%;
                height: 100%;
                position: relative;
                z-index: 1;
                /* Fix 401 */
            }
            
            .noUi-origin {
                position: absolute;
                right: 0;
                top: 0;
                left: 0;
                bottom: 0;
            }
            
            .noUi-handle {
                position: relative;
                z-index: 1;
            }
            
            .noUi-stacking .noUi-handle {
                /* This class is applied to the lower origin when
its values is > 50%. */
                z-index: 10;
            }
            
            .noUi-state-tap .noUi-origin {
                -webkit-transition: left 0.3s, top .3s;
                transition: left 0.3s, top .3s;
            }
            
            .noUi-state-drag * {
                cursor: inherit !important;
            }
            /* Painting and performance;
* Browsers can paint handles in their own layer.
*/
            
            .noUi-base,
            .noUi-handle {
                -webkit-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
            /* Slider size and handle placement;
*/
            
            .noUi-horizontal {
                height: 4px;
            }
            
            .noUi-horizontal .noUi-handle {
                width: 13px;
                height: 13px;
                border-radius: 50%;
                left: -7px;
                top: -4px;
                background-color: #F0846C;
            }
            /* Styling;
*/
            
            .noUi-background {
                background: #D6D7D9;
            }
            
            .noUi-connect {
                background: #F0846C;
                -webkit-transition: background 450ms;
                transition: background 450ms;
            }
            
            .noUi-origin {
                border-radius: 2px;
            }
            
            .noUi-target {
                border-radius: 2px;
            }
            
            /* .noUi-target.noUi-connect {}
            /* Handles and cursors;
*/
             */
            .noUi-draggable {
                cursor: w-resize;
            }
            
            .noUi-vertical .noUi-draggable {
                cursor: n-resize;
            }
            
            .noUi-handle {
                cursor: default;
                -webkit-box-sizing: content-box !important;
                -moz-box-sizing: content-box !important;
                box-sizing: content-box !important;
            }
            
            .noUi-handle:active {
                border: 8px solid #F0846C;
                border: 3px solid grey;
                -webkit-background-clip: padding-box;
                background-clip: padding-box;
                left: -9px;
                top: -7px;
            }
            /* Disabled state;
*/
            
            [disabled].noUi-connect,
            [disabled] .noUi-connect {
                background: #B8B8B8;
            }
            
            [disabled].noUi-origin,
            [disabled] .noUi-handle {
                cursor: not-allowed;
            }

            input#amount {
                width: 50%;
                float: left;
            }
        </style>
<p>
    <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
    <vaadin-button on-click="_reset">重設</vaadin-button>
  </p>
   
  <div id="slider-range"></div>

  
       
    `;
  }
}

// Register the element with the browser.
customElements.define('change-range', dzElm);


