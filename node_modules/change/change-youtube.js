import { PolymerElement, html } from '/node_modules/@polymer/polymer/polymer-element.js';
import {Dazzle} from '/node_modules/@dazzle/dz-dazzle/dz-library.js';

class dzElm extends PolymerElement {
  static get properties () {
    return {
    
    };
  }

  constructor() {
    super();
    this.src = this.getAttribute('src') || "https://www.youtube.com/embed/XoDMCn3P5pI";

  }
  ready() {
      super.ready();
      let elm = this.shadowRoot.querySelector('iframe');
      let domRect = elm.getBoundingClientRect();
      this.addEventListener('click',e=>{
        console.log('Click',e);
      });
    console.log('Rect',domRect,elm.offsetTop,elm.offsetLeft);
      if (Dazzle.editMode==="admin") {
        this.isAdmin = true;
        let button =this.shadowRoot.querySelector('vaadin-button');
        button.style.left =domRect.left;
        button.style.top = domRect.top;
      }
      else
        this.isAdmin = false;

  }

  _changeVideo(){


    let video = prompt("請貼上欲更改的youtube網址");
    if (video){
      var video_id = video.split('v=')[1];
      var ampersandPosition = video_id.indexOf('&');
      if(ampersandPosition != -1) {
        video_id = video_id.substring(0, ampersandPosition);
      }
      this.src="https://www.youtube.com/embed/"+video_id;

      let params = {
        'attribute': {
          "src": this.src
        },
        "style":{
        },
        "property":{}
      }
      this.change(params);

//      this.src = video;
    }

  }

  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.

    return html`
    <style>
       vaadin-button{

         position:absolute !important;
         background:white;
       }
    </style>
    <template is="dom-if" if="{{isAdmin}}"><vaadin-button id="edit" on-click="_changeVideo">更新影片</vaadin-button></template>
        <iframe width="100%" height="100%" src="{{src}}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-youtube', dzElm);

