import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-text-field/vaadin-number-field.js";
import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-button/vaadin-button.js";
import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@cwmr/paper-tags-input/paper-tags-input.js";
import "./change-icon.js";
import "./change-add-fanspage.js";

class dzElm extends PolymerElement {
  static get properties () {
    return {
    
    };
  }

  constructor() {
    super();
    let user = store.get('change-user') || null;
    if (user && user.isAdmin) {
        this.fileManager = Polymer.fileManager;
        this.pageManager = new DataPackage('pages');
        this.userManager = new DataPackage('_user');
    } 
    let elm = document.head.querySelector('meta[name=user-id]') || null;
    let id ;
    if (!elm) {
        id = user['id'];
    } else {
        id = elm.getAttribute('content') || null;
    }

    this.userManager.getDataByCache(id).then(res=>{
        this.user = res;
        if (this.user.isFanpage) {
            if (!this.user.hasOwnProperty('fansAdmin'))
                this.user['fansAdmin'] = ["1"];
        }
    });

    this.fileManager.listFile('user/').then(res=>{
        this.noAlias = res.length;
    });

  }
  ready() {
      super.ready();
      let shadow = this.shadowRoot;
      let that = this;

      // shadow.querySelector('.hide').style.display = "none";

      let user = store.get('change-user') || null;
      console.log('Admin Panel');

      if (user) {
          if (user.isAdmin == true) {
              shadow.querySelector("#controlbar").style.display = "block";
              shadow.querySelector('#mistake').value = user.mistake;

              //***SET PANNEL TO PINK BACKGROUND IF USER IS DISQUALIFIED***//
              if (user.token == 1) {
                  shadow.querySelector('#controlbar').style.background = "pink";
              }

          }
      }

    }
    savePage(id,data){
        let alias = data['alias'];
        let that = this;

            let html = document.createElement('html');
            let head = document.createElement('head');
            let body = document.createElement('body');

            let meta = document.createElement('meta');
            meta.setAttribute('name','user-id');
            meta.setAttribute('content',id);
            console.log('Save Page');
            Polymer.getContent('/pages.html').then(content=>{
                let parser = new DOMParser();
                let doc = parser.parseFromString(content, "text/html");
            
                head.innerHTML = doc.head.innerHTML;
                body.innerHTML = doc.body.innerHTML;
                // body.innerHTML = 
                console.log('HTML','pages/'+alias);

                head.appendChild(meta);
                html.appendChild(head);
                html.appendChild(body);
                let user = store.get('change-user') || null;
                let fileManager = new AwsPackage(user);
                fileManager.saveHtml('page/'+alias,html.outerHTML);
                this.userManager.saveDataWithCache(id,data);
                // this.dataManager.getDataByCache(id).then(res=>{
                //     res['alias'] = alias;
                //     this.dataManager.saveDataWithCache(id,res);
                // });

            });
    }

    _addFanPage() {
        let fanId = prompt("請輸入專頁ID。\n 1.留意此ID不能與其他ID重複\n 2. 一經確認，此ID就不能更改。\n 3. ID只為英文及數字，不允許空白及符號");
        this.userManager.getDataByCache(fanId).then(res=>{
            alert('此ID 已有登記，請重新新增');
            console.log('Result',res);
        },err=>{

            this.fanId = fanId;
            this.page = {
                'username': this.fanId,
                'area': this.user['area'],
                'email': this.user['email'],
                'alreadyBuy': 0,
                'goodsNum': 0,
                'head': this.user['head'],
                'likeProduct':[],
                'password':'$^@&$^%$',
                'score':5,
                'phone': this.user['phone'],
                'id': this.fanId,
                'createTime': new Date().getTime(),
                'adminId':["1"],
                'name': this.fanId,
                'history':[],
                'isAdmin': false,
                'mistake': 0,
                'platform': this.user['platform'],
                'banner': this.user['banner'],
                'status': true,
                'alias': this.fanId,
                'isFanpage': true
            };
            this.savePage(this.fanId,this.page);


            alert('成功新增專頁。五秒後，即將跳至專頁繼續輸入專頁內容');
            window.setTimeout(function(){
                location.href="/page/"+fanId;
            },5000);
                          
        });


    }

    cancelinfo1() {
        this.shadowRoot.querySelector('#info1').style.display = "none";

    }

    _disqualify() {


        // console.log("uid", uid);
        this.user['status'] = false;

        this.userManager.saveDataWithCache(this.user['id'],this.user);
        //PASS TO LAMBDA TO GENERATE EMAIL
        let LambdaParams = {
            "action": "cancelByUid",
            "uid": uid
        };
        let link = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
        Polymer.postData(link, LambdaParams).then(res => {
            console.log("PASS TO LAMBDA SUCCESS!");
            location.reload();
        });
    }
    _recovery() {
                        // console.log("uid", uid);
        this.user['status'] = true;

        this.userManager.saveDataWithCache(this.user['id'],this.user);
        //PASS TO LAMBDA TO GENERATE EMAIL
        let LambdaParams = {
            "action": "recoverByUid",
            "uid": uid
        };
        let link = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
        Polymer.postData(link, LambdaParams).then(res => {
            console.log("PASS TO LAMBDA SUCCESS!");
            location.reload();
        });
        
    }

    _manageFanPage() {
        let listpage = this.shadowRoot.querySelector('#listpage');
        if (listpage.style.display == "grid") {
            listpage.style.display = "none";
        } else {
            listpage.style.display = "grid";
        }
    }



    _save() {
        console.log("updated mistakes count!")

        let shadow = this.shadowRoot;
        let that = this;

        let count = shadow.querySelector('#mistake').value;
        console.log("Mistakes count:", count);
        this.user['mistake'] = count;
        this.userManager.saveDataWithCache(this.user['id'],this.user).then(res=>{
            alert("用戶犯錯次數已更新!");
        });
    }


  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
            * {
                color: black;
                font-family: sans-serif, Microsoft JhengHei;
            }

            .container {
                /* background-image: url(./img/background/3.jpg); */

            }

            #controlbar {
                padding-top: 15px;
                padding-bottom: 25px;
                background: white;
                width: 84%;
                margin: 0 auto;
                margin-top: 25px;
            }

            .cp {
                text-align: center;
            }

            .miscount {
                text-align: center;
                margin: 35px 0 50px 0;
            }

            button {
                cursor: pointer;
                font-family: sans-serif, Microsoft JhengHei;
                font-size: 15px;
                width: 17%;
                border-radius: 3px;
            }

            .buttons {
                margin: 0 auto;
                text-align: center;
            }

            .buttons button {
                height: 50px;
                font-family: sans-serif, Microsoft JhengHei;
                margin-right: 30px;
                border: 1px solid #ccc;
                color: white;

                width: 150px;
            }

            #add {
                background-color: #ff9500;
            }

            #dq {
                background-color: #d9534f;
            }

            #recover {
                background-color: #71b758;
            }


            /* :host([part="input-field"]) {
                background-color: #7cd3da;
            } */

            /*******Fanpage Button*******/
            #manage {
                background-color: #7cd3da;
            }

            change-icon {
                margin: 10px;
            }

            .save {
                width: 50px;
            }

            #info1 {
                width: 84%;
                margin: 0 auto;
                display: none;
            }

            #info2 {
                width: 84%;
                margin: 0 auto;
                display: none;
            }

            .handIn,
            .search {
                margin-right: 30px;
            }

            #listPage {
                grid-template-columns: repeat(4, 1fr);
                grid-row-gap: 15px;
                padding: 30px 40px;
            }

            @media only screen and (max-width: 992px) {}

            @media only screen and (max-width: 640px) {
                #controlbar {
                    width: 100%;
                }

                .buttons button {
                    margin-right: 10px;
                }

                button {
                    width: 20%;
                }
            }
        </style>
        <vaadin-dialog></vaadin-dialog>
        <div class="container">

            <div id="controlbar" style="display: none;">
                <div class="cp">
                    <span>!管理面板!</span>
                </div>
                <div class="miscount">
                    <span>用戶犯錯次數:</span>
                    <vaadin-number-field value="0" min="0" has-controls id="mistake"></vaadin-number-field>
                    <button class="save" on-click="_save">儲存</button>
                </div>

                <div class="buttons">
                    <button id="add" on-click="_addFanPage">新增專頁</button>
                    <button id="dq" on-click="_disqualify">取消資格</button>
                    <button id="recover" on-click="_recovery">回復資格</button>
                </div>


               
               

                <div id="listPage">

                </div>
            </div>
        </div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-control-pannel', dzElm);

