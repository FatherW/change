import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import { Dazzle } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';
import "./change-in-item.js";
import "./change-mobileslide.js";
import "./change-slidelist.js";
import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@cwmr/paper-tags-input/paper-tags-input.js";
class changeshop extends PolymerElement {
    static get properties() {
        return {
            'category': {
                "type": Array
            },
            'searchTags': {
                "type": Array
            },
            'priceStart': {
                "type": Number
            },
            'priceStop': {
                'type': Number
            },
            'initprice': {
                'type': Number
            },
            'pagetag': {
                'type': String
            },
            'isFree': {
                'type': Boolean
            },
            "checkrange": {
                "type": Boolean
            },
            "fanpage": {
                "type": String
            }

        };
    }

    constructor() {
        super();
        let that = this;
        this.categories = [];
        this.keywords = [];
        this.tags = [];
        this.priceStart = 0;
        this.priceStop = 1000000;
        this.district = [];
        this.isNew = [];
        this.initprice = 0;
        this.isFree = null;
        this.checkrange = false;
        this.fanpage = null;
        this.oldTags = [];
        this.product_status = "全新及二手";
        this.priceMsg = '';
        console.log("changeshop", location.search);
        
    }
    ready() {
        super.ready();
        let that = this;
        this.isFree = store.get('isFree') || false;
        Dazzle.dzFire('areachange', {
            'detail': {
                "isFree": this.isFree
            }
        });
        let shadow = this.shadowRoot;
        let panel = shadow.querySelector('change-in-item');
        this.panel = panel;
        this.sidePanel = shadow.querySelector('change-slidelist');

        console.log("now shop");
        this.myTags = shadow.querySelector('#myTags');
        this.myTags.addEventListener('tag-item-remove', function(e) {
            console.log('Detail',e);
            let index = e.detail.index;
            console.log(index, that.oldTags);
            let value = that.oldTags[index];
            store.set('query-keyword',null);
            that.oldTags.splice(index, 1);
            that.panel.removeTags(value);
        });

        document.addEventListener('areachange', e => {
            this.isFree = e.detail.isFree;
            this.panel.isFree = this.isFree;
            this.search();
        })

        let value;

        document.addEventListener('query-keyword', e => {
            value = e.detail.keyword;
            this.addTags(value);
            this.keywords.push(value);
            this.panel.keywords = this.keywords;
            this.search();

        });

        document.addEventListener('query-tags', e => {
            value = e.detail.tags;
            this.addTags(value);
            this.tags.push(value);
            this.panel.tags = this.tags;
            this.search();

        });
        document.addEventListener('query-renew', e => {
            let isNew = e.detail.renew;
            let isReset = e.detail.reset;
            if (isReset) {
                this.product_status = "全新及二手";
                this.isNew = [];
                this.panel.searchAll = true;
                this.search();
            } else {
                if (isNew) {
                    this.product_status = "全新";
                    this.panel.isNew = true;
                    this.panel.searchAll = false;
                    this.search();
                } else {
                    this.product_status = "二手";
                    this.panel.isNew = false;
                    this.panel.searchAll = false;
                    this.search();
                }
            }

        });
        document.addEventListener('select-category', e => {
            let category = e.detail.category;
            this.addTags(category);
            this.categories.push(category);
            this.panel.categories = this.categories;
            this.search();
            // this.search();
        });
        document.addEventListener('select-district', e => {
            // let category = e.detail.category;
            this.addTags(e.detail.district);
            // this.tags.push(e.detail.district);
            this.district.push(e.detail.district);
            this.panel.districts = this.district;
            console.log('Search District', this.panel.districts);
            this.search();
        });

        let myTags = this.shadowRoot.querySelector('#myTags');

        myTags.addEventListener('tag-item-remove', e => {
            console.log('E', e);
        });
        // let shop = document.querySelector('change-shop');
        // if (shop != null) {
        //     shop.back(this.value);
        // }
        document.addEventListener('reset-range', e => {
            this.priceStart = null;
            this.priceStop = null;
            this.priceMsg = '';
            this.panel.minPrice = this.priceStart;
            this.panel.maxPrice = this.priceStop;
            this.search();

        })

        document.addEventListener('select-range', e => {
            this.priceStart = e.detail.start;
            this.priceStop = e.detail.end;
            let msgrange = "$" + this.priceStart + " - $" + this.priceStop;
            this.priceMsg = ":" + msgrange;
            // this.addTags(msgrange);
            this.panel.minPrice = this.priceStart;
            this.panel.maxPrice = this.priceStop;
            this.search();

        })

        // let loc = decodeURIComponent(location.search);
        // // let loc = '';
        // if (loc[1] == 't' && loc[2] == 'a' && loc[3] == 'g' && loc.length > 5) {
        //     let headsearch = "";
        //     for (i = 5; i < loc.length; i++) {
        //         headsearch += loc[i];
        //     }
        //     this.addTags(headsearch);
        //     this.tags.push(headsearch);
        //     this.search();
        // } else if (loc[1] == "c" && loc[2] == "a" && loc[3] == "t" && loc[4] == "e" && loc.length > 6) {
        //     let headsearch = "";
        //     for (i = 6; i < loc.length; i++) {
        //         headsearch += loc[i];
        //     }
        //     this.addTags(headsearch);
        //     this.categories.push(headsearch);
        //     this.search();
        // }
        // ///data from gettv button
        // let cate = store.get('change-cate') || null;
        // if (cate) {
        //     console.log("ttttttttt");
        //     this.addTags(cate.main);
        //     let subcat = cate.sub;
        //     subcat.forEach(item => {
        //         this.categories.push(item);
        //     });
        //     store.set('change-cate', null);
        // }

        // let page = document.querySelector('change-fanpage');
        // if (page) this.pagetag(page.id);
        // this.search();

        if (location.search) {
            let str = location.search.substring(1);
            let key, value;
            [key, value] = str.split("=");
            value = decodeURIComponent(value);
            if (key == 'tag') {
                this.addTags(value);
                this.tags.push(value);
                this.panel.tags = this.tags;
            }
            if (key == 'cate') {
                this.addTags(value);
                this.tags.push(value);
                this.categories.push(value);
                this.panel.categories = this.categories;
            }

            console.log('changeshop', this.tags, key, value);
        }

        let keyword = store.get('query-keyword') || null;
        console.log('Keyword',keyword);
        if (keyword)
            Dazzle.dzFire('query-keyword', {
                'detail': {
                    'keyword': keyword
                }
            });

        this.search();

       // document.querySelector('#containall').style.display = "none";
    }
    addTags(val) {

        let myTags = this.shadowRoot.querySelector('#myTags');
        // let val = this.shadowRoot.querySelector('#inputTags').value;
        //myTags._addTag(val);
        myTags.addTag(val);
        this.oldTags.push(val);

    }
    search() {
        this.panel._search();
    }

    run() {
        let value = "電動";

        let papertag = this.shadowRoot.querySelector('paper-tags-input')._getTags();
        this.shadowRoot.querySelector('paper-tags-input')._onTagItemRemove({
            "detail": {
                "index": papertag.indexOf(value)
            }

        });
    }


    pagetag(tag) {
        console.log("the pagetag is", tag);
        this.fanpage = tag;
    }
    static get template() {
        // Template getter must return an instance of HTMLTemplateElement.
        // The html helper function makes this easy.
        return html `
    
        <style>
            * {
                font-family: sans-serif, 微軟正黑體;
                overflow: hidden;
            }

            #containall {
                width: 100%;
                display: flex;
            }

            .clear {
                clear: both;
            }

            change-in-item {
                -webkit-box-shadow: 1px 0px 8px 0px rgba(50, 49, 56, 0.2);
                -moz-box-shadow: 1px 0px 8px 0px rgba(50, 49, 56, 0.2);
                box-shadow: 1px 0px 8px 0px rgba(50, 49, 56, 0.2);
            }

            .catbutton {
                background-color: lightgrey;
                text-align: center;
                padding-left: 13px;
                padding-right: 13px;
                border: none;
                width: auto;
                height: 30px;
                border-radius: 15px;

            }

            a:link,
            a:visited {
                text-decoration: none;
                color: black;
            }

            a:hover {
                text-decoration: none;

            }

            #miniimg {
                width: 30px;
                height: 30px;
            }

            .shouldblock2 {
                display: inline;
            }

            .leftele {
                float: left;
                color: black;
                margin-left: 8px;
                border: none
            }

            .leftele2 {
                float: left;
                border: none;


            }

            .rightele {
                float: left;
            }

            .rightele2 {
                float: right;
            }

            .shouldblock {
                display: flow-root;
            }

            #leftele {
                float: left;
                width: 20%;
                min-width: 235px;
                margin-top: 50px;
            }

            #rightele {
                width: 100%;
                float: left;
                margin-top: 50px;
                border: 'none';
                margin-left: 50px;

            }

            .valuebar1 {
                padding-top: 8px;
                padding-left: 15px;
                text-align: left;
                width: 50%;
                font-size: 9px;
                height: 30px
            }

            .valuebar2 {
                padding-top: 8px;
                padding-right: 15px;
                text-align: right;
                width: 50%;
                font-size: 9px;
                height: 30px
            }

            .slidebar1 {
                padding-top: 8px;
                padding-bottom: 15px;
                height: 50px;
            }

            #cong {
                background-color: white;
                font-size: larger;
            }

            .largebar {
                width: 50px;
                height: 70px;
            }



            .slider-labels {
                margin-top: 10px;
            }


            #viewingcat {
                display: block;
            }

            body {
                margin: none;
            }

            change-mobileslide {
                display: none;
            }


            @media (max-width: 1292px) {
                .things-grid-middle-mobile {
                    grid-template-columns: repeat(2, 1fr);
                }
            }

            @media only screen and (max-width: 940px) {}

            @media only screen and (max-width: 768px) {
                #containall {
                    display: block;
                }

                #rightele {
                    margin-top: 0;
                    border: 'none';
                    margin-left: 0;
                }

                change-slidelist {
                    display: none;
                }

                change-mobileslide {
                    display: block;
                }


            }
        </style>

        <div id="containall">
            <div id="leftele">
                <change-slidelist></change-slidelist>
                <change-mobileslide></change-mobileslide>
            </div>
            <!-- <div style="width: 20px;height: 20px;"><button on-click="run"> try</button></div> -->
            <div id="rightele">
                <div class="initemtitle" id="viewingcat">
                    <h2>搜尋結果({{product_status}}){{priceMsg}}</h2> 
                    

                    <paper-tags-input width="100%" id="myTags">
                    </paper-tags-input>
                    

                </div>
                <change-in-item></change-in-item>
            </div>
        </div>

    `;
    }
}

// Register the element with the browser.
customElements.define('change-shop', changeshop);