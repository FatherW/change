import { PolymerElement, html } from '/node_modules/@polymer/polymer/polymer-element.js';
import '/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import '/node_modules/@vaadin/vaadin-button/vaadin-button.js';
import '/node_modules/@vaadin/vaadin-radio-button/vaadin-radio-group.js';
import '/node_modules/@vaadin/vaadin-radio-button/vaadin-radio-button.js';

// import {Dazzle} from '/node_modules/@dazzle/dz-dazzle/dz-library.js';


class dzElm extends PolymerElement {
  static get properties () {
    return {
        msg: String
    };
  }

  constructor() {
    super();
    console.log('created');
    this.user = store.get('change-user') || null;
    if (this.user) {
        this.fileManager = new AwsPackage(this.user);
        this.dataManager = new DataPackage('_user');
        this.prodManager = new DataPackage('product');
        this.orderManager = new DataPackage('order');
        console.log('this.product', this.product);
        console.log('this.prodManager', this.prodManager);
    }


  }
  ready() {
      super.ready();

      let that = this;
 
   
      let shadow = this.shadowRoot;
      shadow.querySelector('#_changeicon').src = this.user['head'];
      shadow.querySelector('#owner').innerHTML = this.user['username'];
      shadow.querySelector('#time').innerHTML += this.user['score']; + '( ' +
      this.user['numberRate'] + ' )';
      shadow.querySelector('#para').innerHTML = this.msg;

      let cfmDialog = shadow.querySelector('#back');
      cfmDialog.addEventListener("click", (e) => {
          that._cancel();

      });
      let radioButtonGroup = this.shadowRoot.querySelector('vaadin-radio-group');
//      let radioButtonGroup = this.$.exchange;
    // radioButtonGroup.addEventListener('change', function(event) {
    //       this.choice = radioButtonGroup.value;
    //       console.log('Choice',this.shadowRoot.parentElement);

    //     });
}
_cancel(){
    this.dialog.opened= false;
}

_confirm(){
    let radioButtonGroup = this.shadowRoot.querySelector('vaadin-radio-group');
    let value = radioButtonGroup.value;
}

  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
    * {
        color: black;
        font-family: sans-serif, Microsoft JhengHei;
    }

    body {
        overflow: hidden;
    }

    #deleteall {
        align-items: center;
        text-align: left;
        padding-left: 10%;
        padding-right: 10%;
        font-family: sans-serif;
        font-family: Microsoft JhengHei;
        overflow: hidden;
    }

    #_changeicon {
        width: 90px;
        border-radius: 100%;

    }

    #para {
        color: black;
        font-size: 1rem;
        padding: 15px;
        top: 63px;
        left: 8px;
        color: black;
    }

    #review {
        height: 100px;
        width: 100%;

    }

    #click-button {
        border: none;
        color: white;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        cursor: pointer;
        padding-top: 3%;
        width: 100%;
        text-align: center;
        padding-bottom: 3%;

    }

    #a1 {
        float: left;
        padding: 3%;
    }

    #a2 {
        font-size: 15px;
        padding-top: 5%;
    }

    #time {
        font-size: 24px;
        color: black;
        font-weight: 550;
    }

    #usericon {
        height: 100px;
        margin-bottom: 12px;
        margin-top: 12px;
        border-radius: 6px;
        padding-top: 3px;
        padding-bottom: 3px;
        width: 100%;
    }

    #owner {
        font-size: 20px;
        font-weight: bold;
    }
    .button-set{
            display:grid;
            padding: 5px;
            grid-column-gap: 5px;
            grid-template-columns: repeat(2, 1fr);        
    }
    .cancel {
        background-color:#F0846C;
    }
    .confirm{
        background-color: #4CAF50;  
    }
</style>
<div id="deleteall">

    <div style="float: right;">
        <button id="back"
            style="border: none; background-color: white; margin-top: 10px; font-size: 15px; cursor: pointer; position: absolute; margin-left: 20px;">X</button>
    </div>
    <div id="usericon">
        <div id="a1">
            <img id="_changeicon" src={{seller.head}}>
        </div>
        <div id="a2">
            <div class="name" id="owner">{{seller.username}}</div>
            <div id="time">評分/人數:{{seller.score}}/{{seller.numberRate}}</div>
        </div>
    </div>
    <div id='para'>
        {{product.description}}
    </div>
    <template is="dom-if" if="product.isFree">
        <vaadin-radio-group label="你可選擇" theme="vertical" id="exchange" value="{{choice}}">
            <vaadin-radio-button value="no-exchange">不作任何交換，純粹免費送出貨品.</vaadin-radio-button>
            <vaadin-radio-button checked value="exchange">接受交換，對方的貨品也適合我.</vaadin-radio-button>
        </vaadin-radio-group>
    </temlate>
  
    <div class="button-set">
       <vaadin-button id="click-button" class="cancel" on-click="_cancel">取消</vaadin-button>
       <vaadin-button id="click-button" class="confirm" on-click="_confirm">確認</vaadin-button>
    </div>
</div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-message', dzElm);

class MyTemplate extends PolymerElement {
    static get template() {
        return html`
 
        <vaadin-radio-group label="你可選擇" theme="vertical" id="exchange">
            <vaadin-radio-button value="no-exchange">不作任何交換，純粹免費送出貨品.</vaadin-radio-button>
            <vaadin-radio-button checked value="exchange">接受交換，對方的貨品也適合我.</vaadin-radio-button>
        </vaadin-radio-group>

        `;
    }
    ready(){
        super.ready();
        this.choice = 'true';
        let radioButtonGroup = this.shadowRoot.querySelector('vaadin-radio-group');
        console.log('Change',radioButtonGroup);
        radioButtonGroup.addEventListener('change', function(event) {
            this.choice = radioButtonGroup.value;
            console.log('Choice',this.shadowRoot.parentElement);

          });
    }
    static get is() {return 'free-message'}
}
customElements.define(MyTemplate.is, MyTemplate);