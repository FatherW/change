import { PolymerElement, html } from '/node_modules/@polymer/polymer/polymer-element.js';
import {Dazzle} from '/node_modules/@dazzle/dz-dazzle/dz-library.js';

class dzElm extends PolymerElement {
  static get properties () {
    return {
        id: {
            "type": String
        }
    };
  }

  constructor() {
    super();
    this.user = store.get('change-user') || null;
    this.userManager = new DataPackage("_user");
  }
  ready() {
      super.ready();
      let that = this;
      let shadow = this.shadowRoot;

      // confirm btn
      let cfcDialog = shadow.querySelector('.confirmyes');
      cfcDialog.addEventListener("click", (e) => {
          console.log("confirm button is working");
          var event = new CustomEvent('close-item-dialog', {});

          let isWork = that.chPw();
          // closing pop-up
          if (isWork)
              document.dispatchEvent(event);

      })

      // closing btn
      let cfmDialog = shadow.querySelector('.confirmno');
      cfmDialog.addEventListener("click", (e) => {
          console.log("close button is working");

          // closing pop-up
          var event = new CustomEvent('close-item-dialog', {});
          document.dispatchEvent(event);

      });
      

}

chPw(){
    if (!this.newPassword) {
        alert('必須輸入密碼');
        return;
    }
    if (this.oldPassword != this.user['password']){
        alert('舊密碼不正確');
        return;
    }
    if (this.newPassword != this.reNewPassword){
        alert('新密碼再輸入不相配');
        return;
    }

    this.user['password'] = this.newPassword;
    this.userManager.saveDataWithCache(this.user['id'],this.user);
    alert('成功更新');
}

  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
    .confirm-grid {
        text-align: center;
        display: grid;
        grid-row-gap: 5px;
        grid-column-gap: 1px;
        grid-template-columns: repeat(2, 1fr); 
        justify-content: center;
    }

    .text {
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 1;
        grid-row-end: 2;
        padding-top: 4%;
    }

    .confirmyes {
        height: 40px;
        width: 100%;
        background-color: #F0846C;
        font-size: 130%;
        color: white;
        border: none;
        border-radius: 3px;
    }

    .confirmno {
        height: 40px;
        width: 100%;
        background-color: #F06C6C;
        font-size: 130%;
        color: white;
        border-radius: 3px;
        border: none;
    }
    .content {
        padding:10px;
    }
    vaadin-text-field{
        width:100%;
    }
</style>
<div class="content">
    <h3>請填上舊密碼, 及輸入新密碼兩次</h3>
    <vaadin-text-field placeholder="舊密碼" value$="{{oldPassword}}"></vaadin-text-field>
    <vaadin-text-field placeholder="新密碼" value$="{{newPassword}}"></vaadin-text-field>
    <vaadin-text-field placeholder="新密碼再輸入" value$="{{reNewPassword}}"></vaadin-text-field>

    <div class="confirm-grid">
        <div>
            <button class="confirmyes">確定</button>
        </div>
        <div>
            <button class="confirmno">返回</button>
        </div>
    </div>
</div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-ch-pw', dzElm);

