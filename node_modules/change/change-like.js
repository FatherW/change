import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
// import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

class dzElm extends PolymerElement {
  static get properties () {
    return {
        like: {
            "type": Number
        },
        id: {
            "type": Number
        },
        status: {
            "type": Boolean
        },
        "liked": {
            "type": Number
        }
    };
  }

  constructor() {
    super();
    this.like = 0;
    this.user = store.get('change-user') || null;
    if (this.user) {
        this.fileManager = new AwsPackage(this.user);
        this.dataManager = new DataPackage('_user');
        this.prodManager = new DataPackage('product');

    }
  }
  ready() {
      super.ready();
      this.id = this.getAttribute('id');
      let that = this;
      let shadow = this.shadowRoot;

      let user2 = store.get('change-user') || null;
      let product_url = '/json/product-' + this.id + '.json?id=' + new Date().getTime();
      if (user2) {
          let user_url = '/json/user-' + user2._id + '.json?id=' + new Date().getTime();
          Dazzle.getContent(user_url).then(res => {
              let user = JSON.parse(res);
              this.checkLike(user);

          })
      }
      Dazzle.getContent(product_url).then(str => {
          let json = JSON.parse(str);
          this.like = json['like'];


      });

}
checkLike(user) {
    let shadow = this.shadowRoot;
    let countlikeproduct = user['likeProduct'].length;
    var counti2 = 0;
    let checked2 = false;
    // console.log("user liked", user);
    for (i = 0; i < countlikeproduct; i++) {
        if (user['likeProduct'][i] == this.id) {
            // console.log('checked');
            checked2 = true;
        } else {
            counti2++;

        }
    }

    if (checked2 == false) {} else {
        this.status = true;

    }

    shadow.querySelector('#toggle-heart').checked = this.status;


    if (shadow.querySelector('#toggle-heart').checked)
        shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined-selected.png');
    else
        shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined.png');


}

checklogin() {
    let user = store.get('change-user') || null;
    let url = "/json/user-" + user._id + ".json?id=" + new Date().getTime();
    if (user != null) {
        Dazzle.getContent(url).then(res => {
            let likeProduct = res.likeProduct;
            this.liked = likeProduct.indexOf(this.id);
            console.log(likeProduct, this.liked);
        }).then(res => {
            this.addCount();
        })
    } else {
        alert("請先登入");
        this.shadowRoot.querySelector('#toggle-heart').checked = false;
    }
}



addCount() {

    let that = this;
    let shadow = this.shadowRoot;
    let user = store.get('change-user') || null;
    this.dataManager(this.id).getDataByCache(res=>{
        let like = parseInt(res['like']);
        let indexOf = res['likeProduct'].indexOf(that.liked);
        if (shadow.querySelector('#toggle-heart').checked != true) {
            like--;
            res['like'] =like;
            if (indexOf>-1)
                res['likeProduct'].splice(indexOf,1);
            that.dataManager(this.id).saveDataWithCache(that.id,res);
            shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined.png');
        } else {

            like++;
            res['like'] =like;
            if (indexOf == -1)
                res['likeProduct'].push(that.liked);
            that.dataManager(this.id).saveDataWithCache(that.id,res);
            shadow.querySelector('#likes').innerHTML = parseInt(shadow.querySelector('#likes').innerHTML) + 1;

            shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined-selected.png');

        }


    });
    // let URL = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";
    // let param = {
    //     "action": "updateData",
    //     "index": "change",
    //     "type": "product",
    //     "id": this.id,
    //     "body": {
    //         "query": {
    //             "script": {
    //                 "source": "ctx._source['like']+=1"
    //             }
    //         }
    //     }
    // };

    // let param2 = {
    //     "action": "updateData",
    //     "index": "change",
    //     "type": "product",
    //     "id": this.id,
    //     "body": {
    //         "query": {
    //             "script": {
    //                 "source": "ctx._source['like']-=1"
    //             }
    //         }
    //     }
    // };


    // if (shadow.querySelector('#toggle-heart').checked != true) {



    //     shadow.querySelector('#likes').innerHTML = parseInt(shadow.querySelector('#likes').innerHTML) - 1;
    //     Dazzle.postData(URL, param2).then(res => {
    //         if (res.code > 0) {

    //             let paramchange = {
    //                 "action": "updateData",
    //                 "index": "change",
    //                 "type": "_user",
    //                 "id": user['_id'],
    //                 "body": {
    //                     "query": {
    //                         "script": {
    //                             "source": "ctx._source['likeProduct'].remove(" + this.liked + ")"
    //                         }
    //                     }
    //                 }
    //             };
    //             console.log(this.liked, "qqqqqqq", JSON.stringify(paramchange));
    //             Dazzle.postData(URL, paramchange).then(res => {
    //                 if (res.code > 0) {
    //                     this.dataManager.loadData(user['_id']).then(res => {
    //                         this.fileManager.saveFile('json/user-' + user['_id'] + '.json', JSON.stringify(res));
    //                     });

    //                     this.prodManager.loadData(this.id).then(res => {
    //                         this.fileManager.saveFile('json/product-' + this.id + '.json', JSON.stringify(res));
    //                     });


    //                     // console.log("reduced");
    //                 } else {
    //                     console.log("error in delete favorite")
    //                 }
    //             });
    //         } else {
    //             alert("fail to reduce")
    //         }
    //     });


    //     shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined.png');
    // } else {
    //     shadow.querySelector('#likes').innerHTML = parseInt(shadow.querySelector('#likes').innerHTML) + 1;

    //     Dazzle.postData(URL, param).then(res => {
    //         if (res.code > 0) {

    //             let paramchange2 = {
    //                 "action": "updateData",
    //                 "index": "change",
    //                 "type": "_user",
    //                 "id": user['_id'],
    //                 "body": {
    //                     "query": {
    //                         "script": {
    //                             "source": "ctx._source['likeProduct'].add('" + this.id + "')"
    //                         }
    //                     }
    //                 }
    //             };

    //             Dazzle.postData(URL, paramchange2).then(res => {
    //                 if (res.code > 0) {
    //                     this.dataManager.loadData(user['_id']).then(res => {
    //                         this.fileManager.saveFile('json/user-' + user['_id'] + '.json', JSON.stringify(res));
    //                     });


    //                     this.prodManager.loadData(this.id).then(res => {
    //                         this.fileManager.saveFile('json/product-' + this.id + '.json', JSON.stringify(res)).then(res => {
    //                             console.log("finish save json");
    //                         });
    //                     });
    //                 } else {
    //                     console.log("error in add favorite")
    //                 }
    //             });
    //         } else {
    //             console.log("fail to increase");
    //         }
    //     });

    //     shadow.querySelector('.like-img').setAttribute('src', '/img/symbol/like-outlined-selected.png');




    // }




}
  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
            #toggle-heart {
                position: absolute;
                left: -100vw;
            }

            [for=toggle-heart] {}

            .like-img {
                width: 20px;
                height: 20px;
                background-size: contain;
                background-repeat: no-repeat;
                background-size: contain;
                cursor: pointer;
                border: none;
                background-color: transparent;
                color: transparent;
                margin-top: 10px;
                margin-right: 10px;
                margin-bottom: -2px;
            }

            [id="toggle-heart"]:checked+label {
                /* background-color: red; */
            }
        </style>
        <style include="icon-styles"></style>
        <div id="container">
            <input on-click="checklogin" id="toggle-heart" type="checkbox" />
            <label for="toggle-heart">
                <img src="/img/symbol/like-outlined.png" class="like-img">
                <span id="likes">{{like}}</span>
            </label>

        </div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-like', dzElm);

