import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
// import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

// import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/css/main-style.js';


class dzElm extends PolymerElement {
  static get properties () {
    return {
        "id": {
            "type": String
        },
        "removeid": {
            "type": String
        }
    };
  }
constructor(){
    super();
    this.dataManager = new DataPackage("product");
}
  ready() {
      super.ready();
      let that = this;
      let shadow = this.shadowRoot;

      //Eventlistener for the switch button
      let cStatus = shadow.querySelector('.status');
      cStatus.addEventListener('click', e => {
          that.upStock();
      });

      //Get back status for switch button from Postman
      let loc = location.search;
      let pid;
      if(window.location.hash)
        pid = window.location.hash.substring(1);
    else
        pid = document.head.querySelector('meta[name=product-id]').getAttribute('content');
        // pid = this.id;
      let posit = 0;


      this.dataManager.getDataByCache(pid).then(res=>{
          if (typeof(res.postStatus) == "undefined") {
              res['postStatus'] = true;
              shadow.querySelector('.status').checked = true;
              this.dataManager.saveDataWithCache(pid,res);
          } else 
              shadow.querySelector('.status').checked = res.postStatus;

          this.product = res;
      });

}
   //UP & DOWN FUNCTION
   upStock() {
    let shadow = this.shadowRoot;
    let check = shadow.querySelector('.status').checked;
    let loc = location.search;
    let pid = this.id;
    let posit = 0;


    this.product['postStatus'] = check;
    this.dataManager.saveDataWithCache(this.id,this.product);
}

  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
    .status-container {
        color: white;
        font-family: sans-serif, Microsoft JhengHei;
        margin: 0;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 100px;
        height: 35px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
        padding-top: 4px;
        padding-left: 10px;
        border: solid 1px #ccc;
        width: auto;
    }

    .slider span {
        color: white;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 48px;
        left: 2px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked+.slider {
        background-color: green;
    }

    input:focus+.slider {
        box-shadow: 0 0 1px green;
    }

    input:checked+.slider:before {
        -webkit-transform: translateX(45px);
        -ms-transform: translateX(45px);
        transform: translateX(45px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

    .slider.round:before {
        border-radius: 50%;
    }

    @media only screen and (max-width: 640px) {
        .switch{
            width: 80px;
        }

        .slider {
            padding-top: 5px;
            padding-left: 5px;
            font-size: 14px;
        }

        .slider:before {
            width: 38px;
        }

        input:checked+.slider:before {
            transform: translateX(36px);
        }
    }
</style>

<div class="status-container">
    <label class="switch">
        <input class="status" type="checkbox" checked>
        <span class="slider">上架 | 下架</span>
    </label>
</div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-status', dzElm);

