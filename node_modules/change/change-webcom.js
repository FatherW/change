import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-text-field/vaadin-text-area.js";
Dazzle.loadScript("/bower_components/crypto-js/crypto-js.js");

class dzElm extends PolymerElement {
  static get properties () {
    return {
        seller: Object,
        product: Object
    };
  }

  constructor() {
    super();
    this.user = store.get('change-user') || null;
    if (this.user) {
        this.fileManager = new AwsPackage(this.user);
        this.userManager = new DataPackage('_user');
        this.prodManager = new DataPackage('product');
        this.orderManager = new DataPackage('order');
        console.log('this.product', this.product);
        console.log('this.prodManager', this.prodManager);
    }
  }
  ready() {
      super.ready();
      let that = this;
           
      let shadow = this.shadowRoot;
      this.userManager.getDataByCache(this.product['ownerId']).then(user=>{
          this.seller = user;
          shadow.querySelector('#_changeicon').src = this.seller['head'];
          shadow.querySelector('#owner').innerHTML = this.seller['username'];
          shadow.querySelector('#time').innerHTML += this.seller['score']; + '( ' +
          this.seller['numberRate'] + ' )';
      });
      shadow.querySelector('#para').innerHTML = this.product['description'];

      shadow.querySelector('#review').addEventListener("keypress", function(e) {
          var key = e.which || e.keyCode || 0;
          if (key === 13) {
              that._postRequest();
          }
      });

      let cfmDialog = shadow.querySelector('#back');
      cfmDialog.addEventListener("click", (e) => {
          console.log("close button is working");

          // closing pop-up
          var event = new CustomEvent('close-item-dialog', {});
          document.dispatchEvent(event);

      });
      // this.saveOrder();
      // this.orderManager.getAllData().then(res=>{
      //     console.log('Order',res);
      // });


}
sendmail(from, to, subject, html) {
    let json = {
        'from': from,
        'to': to,
        'subject': subject,
        'html': html
    }
    let emailUrl = "https://9hhtm40jpe.execute-api.ap-northeast-1.amazonaws.com/sendemail/";

    Dazzle.postData(emailUrl, json).then(res => {
        if (res.code > 0) {
            // alert('成功發送');
            // location.reload();
        }
    })

}
_postRequest() {
    console.log('点击了送出按钮');
    let shadow = this.shadowRoot;
    let loc = location.search;
    let html;
    let pid = "";
    let sellerid = "";
    let posit = 0;
    
    let msg = shadow.querySelector('#review').value;
    let id = Date.now();

    let buyer = store.get("change-user") || null;
    let contactinfo = shadow.querySelector('#review').value;

    //For testing get SELLER properties from new-product
    // let k = document.querySelector('change-new-product').SELLER;
    // console.log("omgomg:", k);

    if (buyer == null) {
        alert("請先登入");
    } else {
        // this.fileManager = new Awspackage(buyer);

        // Henry's Code
        console.log("omgomg:", JSON.stringify(this.product));
        let pid = this.product['id'];
        let sid = this.seller['id'];
        let to = this.seller['email'];
        let html;

        if (this.product['isNew']) {
            var status = "https://www.gettv.hk/img/icon/new-10.png";
        } else {
            var status = "https://www.gettv.hk/img/icon/second-hand-11.png";
        }
        console.log("status:", status);

        let image = this.product['pics'][0];
        let productname = this.product['productname'];
        let sellerImage = this.seller['head'];
        console.log("seller head:", sellerImage);
        let sellerName = this.seller['username'];
        let price = this.product['price'];
        let district = this.product['district'];
        let deliveryMethod = this.product['deliveryMethod'];
        let deliveryMethod2 = this.product['deliveryMethod'];

        //GENERATE REG TOK
        var tok = Date.now();
        // console.log("tok:", tok);
        var expireDate = tok + 604800000; //604800000 = 1 week time in milliseconds
        // console.log("expireDate:", expireDate);

        // this.contactToken(tok, to, expireDate, pid);
        let id = this.generateToken(15);
        // this.encryptData(id);
        let json = {
            "order":this.order,
            "seller":this.seller,
            "buyer": this.user,
            "product":this.product,
            "createTime": new Date().getTime()
        }
        let token = Dazzle.encryptToken(json);

        this.saveOrder();
        console.log('Seller Image',sellerImage);
        Dazzle.getContent('/email-template/sendcontactemail.html').then(html => {
            if (image[0]==="/")
                image = "https://www.gettv.hk" + image;
            if (sellerImage[0]==="/")
                sellerImage = "https://www.gettv.hk" + sellerImage;

            html = html.replace("[[image]]", image);
            html = html.replace("[[status]]", status);
            html = html.replace("[[productname]]", productname);
            html = html.replace("[[sellerImage]]", sellerImage);
            html = html.replace("[[sellerName]]", sellerName);
            html = html.replace("[[price]]", price);
            html = html.replace("[[district]]", district);
            html = html.replace("[[deliveryMethod]]", deliveryMethod);
            html = html.replace("[[deliveryMethod2]]", deliveryMethod);
            html = html.replace("[[contactinfo]]", contactinfo);
            html = html.replace("[[token]]", token);

            console.log("html:", token);
            Dazzle.sendEmail( to, '你有新的訊息', html);
            // Dazzle.sendEmail("henry@01power.net", '你有新的訊息', html);
            alert('電郵已發出');
            this.dialog.opened = false;
        });

    }
}

generateToken(length) {
        var result           = '';
        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for ( var i = 0; i < length; i++ ) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
}

saveOrder() {
    console.log("SAVEOEDER");
    let arr = this.product['replyArray'];
    console.log("arr", arr);

    let id = 'order-' + this.product['id'] + '-' + arr.length;
    let msg = this.shadowRoot.querySelector('#review').value;
    let json = {
        "buyerId": this.user['id'],
        "productId": this.product['id'],
        "sellerId": this.product['ownerId'],
        "id": id,
        "msg": msg,
        "submitTime": new Date().getTime(),
        "status":"求貨中"  
    };
    this.orderManager.saveDataWithCache(id, json);
    this.product['replyArray'].push(id);
    this.prodManager.saveDataWithCache(this.product['id'], this.product);

}


  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
            * {
                color: black;
                font-family: sans-serif, Microsoft JhengHei;
            }

            body {
                overflow: hidden;
            }

            #deleteall {
                align-items: center;
                text-align: center;
                padding-left: 10%;
                padding-right: 10%;
                font-family: sans-serif;
                font-family: Microsoft JhengHei;
                overflow: hidden;
            }

            #_changeicon {
                width: 90px;
                border-radius: 100%;

            }

            #para {
                color: black;
                font-size: 1rem;
                padding: 15px;
                top: 63px;
                left: 8px;
                color: black;
            }

            #review {
                height: 100px;
                width: 100%;

            }

            #click-button {
                background-color: #4CAF50;
                border: none;
                color: white;
                text-decoration: none;
                display: inline-block;
                font-size: 14px;
                cursor: pointer;
                padding-top: 3%;
                width: 100%;
                text-align: center;
                padding-bottom: 3%;

            }

            #a1 {
                float: left;
                padding: 3%;
            }

            #a2 {
                font-size: 15px;
                padding-top: 5%;
            }

            #time {
                font-size: 24px;
                color: black;
                font-weight: 550;
            }

            #usericon {
                height: 100px;
                margin-bottom: 12px;
                margin-top: 12px;
                border-radius: 6px;
                padding-top: 3px;
                padding-bottom: 3px;
                width: 100%;
            }

            #owner {
                font-size: 20px;
                font-weight: bold;
            }
        </style>
        <div id="deleteall">

            <div style="float: right;">
                <button id="back"
                    style="border: none; background-color: white; margin-top: 10px; font-size: 15px; cursor: pointer; position: absolute; margin-left: 20px;">X</button>
            </div>
            <div id="usericon">
                <div id="a1">
                    <img id="_changeicon" src={{seller.head}}>
                </div>
                <div id="a2">
                    <div class="name" id="owner">{{seller.username}}</div>
                    <div id="time">評分/人數:{{seller.score}}/{{seller.numberRate}}</div>
                </div>
            </div>
            <div id='para'>
                {{product.description}}
            </div>
            <vaadin-text-area id="review" placeholder="留言給賣家"></vaadin-text-area>
            <button id="click-button" on-click="_postRequest">送出</button>
        </div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-webcom', dzElm);

