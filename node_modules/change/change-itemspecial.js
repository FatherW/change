import { PolymerElement, html } from '/node_modules/@polymer/polymer/polymer-element.js';
import '/node_modules/@vaadin/vaadin-button/vaadin-button.js';
import { Dazzle } from '/node_modules/@dazzle/dz-dazzle/dz-library.js';
import './change-like.js';
import './change-things.js';

class dzElm extends PolymerElement {
    static get properties() {
        return {
            "data": {
                "type": Object
            },

            "allquery": {
                "type": Array

            },

            "countitem": {
                "type": Number
            },
            "res": {
                "type": Array
            }



        };
    }

    constructor() {
        super();
        this.isFree = store.get('isFree') || false;
        this.from = 0;
        this.size = 8;
    }
    _search(){  
        console.log('Search');
        let that = this;
        let shadow = this.shadowRoot;
        let panel = shadow.querySelector('#blank');
        // shadow.querySelector('.botbutton').style.display = 'block';
        let url = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";
        this.dbUrl = url;
        let must_not = [];
        let must =[
                    { "match": { "isFree": this.isFree }}
                ];
        must.push({ "match": { "postStatus":   true  }});

        
        let query={
            "bool": { 
                "must": must
            }
        }
        let searchParams = {
            "action": "searchData",
            "index": "change",
            "type": "product",
            "_source": "id,price",    
            "from":this.from,
            "size":this.size,
            "body": {
                "sort": [{
                    "createTime": {
                        "order": "desc"
                    }
                }],
                "query": query,
                "aggs": {
                    "max_price": { "max": { "field": "price" } }
                }
            }
        };
        this.query = query;
        console.log('Search',searchParams);
    //    let shop = document.querySelector('change-shop');
    //    let list = shop.shadowRoot.querySelector('change-slidelist');
        // list.shadowRoot.querySelector('#renew').innerHTML = '<change-range></change-range>';
        panel.classList.remove('no-product');
        Dazzle.postData(url, searchParams).then(res => {
                console.log(res);
                // panel.classList.removeClass('loading');
    
                if (res.code>0){
                   console.log('Resolve',JSON.stringify(searchParams));
                    if (!res.resolve.length) {
                        if (that.from ===0) {
                            panel.classList.add('no-product');
                            panel.innerHTML = '';
                        } else 
                            that.from = 0;
                        // panel.innerHTML = "查無貨品";
                        that.initMaxPrice = 0;
                    } else {
                        panel.classList.remove('no-product');
                        if (this.from ==0)
                            panel.innerHTML = '';
    
                        let price =that.initMaxPrice || 0;
                        let minPrice = that.minPrice || 0;
                        res.resolve.forEach(item=>{
                            let addi = document.createElement('change-things');
                            addi.setAttribute('id', item['id']);
                            addi.isSelection = that.isSelection;
                            panel.appendChild(addi);
                        
                            // for price range
                            if (item['price']> price)
                                price = item['price'];
                        });
                        that.initMaxPrice = price;
    
    
    
                       
                        // try{
                        //     list.shadowRoot.querySelector('change-range').setSlider(minPrice,that.initMaxPrice);
                        // } catch(e){
    
                        // }
    
                       
                    }
                }
    
        });
    
    
    }

    renew(){

        let that = this;
        let shadow = this.shadowRoot;
        this.countitem = 0;
        let Url = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";

        var paidquery = {
            "match": {
                "isFree": this.isFree
            }
        }

        let param = {
            "action": "searchData",
            "index": "change",
            "type": "product",
            "body": {
                "sort": [{
                    "createTime": {
                        "order": "desc"
                    }
                }],
                "query": {
                    "bool": {
                        "must": paidquery,
                        "must_not": {
                            'match': {
                                "postStatus": false
                            }
                        }
                    }
                }
            }
        };

        console.log('Item Params',param);

        Dazzle.postData(Url, param).then(res => {
            if (res.code > 0) {
                let prods = res.resolve;
                this.res = res;
                var storeId = [];
                let check8 = 8;
                if (prods.length - this.countitem < 8) {
                    check8 = prods.length - this.countitem;
                }
                for (var i = 0; i < check8; i++) {
                    let theidis = prods[i]['_id'];

                    storeId.push(theidis)
                };


                if (prods.length - this.countitem < 8) {
                    check8 = prods.length - this.countitem;
                }
                for (var i = 0; i < check8; i++) {
                    let current = shadow.querySelector('.things-grid').innerHTML;
                    current = current +
                        "<change-things id=\"" + storeId[i] + "\"></change-things>";

                    shadow.querySelector(".things-grid").innerHTML = current;
                }
                shadow.querySelector('.things-grid').classList.remove('svg');
                this.countitem = 8;

            } else {
                alert("error");
            }

        })
    }
    ready() {
        super.ready();
        let that = this;
        this._search();

        document.addEventListener('areachange', e => {
            store.set('isFree',e.detail.isFree);
            this.isFree = e.detail.isFree;
            this._search();
            // this.isfree(e.detail.isFree);
        });

        that.buildCategory();
    }
    buildCategory() {
        let shadow = this.shadowRoot;
        let cateUrl = "/json/category.json";
        Dazzle.getContent(cateUrl).then(res => {
            let div = shadow.querySelector('.titlebutton');
            res = JSON.parse(res);
            res.forEach(item => {
                let button = document.createElement('button');
                button.setAttribute('class', 'catbutton');
                button.innerHTML = item.name;
                button.addEventListener('click', e => {
                    let cate2list = {
                        "main": item.name,
                        "sub": item.children
                    }
                    store.set('change-cate', cate2list);
                    location.href = '/list-product.html';
                });
                div.appendChild(button);
            })
            let button = document.createElement('button');
            button.setAttribute('id', 'cat_all');
            button.innerHTML = "所有類別";
            button.addEventListener('click', e => {
                store.set('change-cate', null);
                location.href = '/list-product.html';
            })
            div.appendChild(button);
        })
    }
    isfree(isFree) {
        let that = this;
        let shadow = this.shadowRoot;
        this.countitem = 0;




        let Url = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";

        var paidquery = {
            "match": {
                "isFree": isFree
            }
        }

        let param = {
            "action": "searchData",
            "index": "change",
            "type": "product",
            "body": {
                "sort": [{
                    "createTime": {
                        "order": "desc"
                    }
                }],
                "query": {
                    "bool": {
                        "must": paidquery,
                        "must_not": {
                            'match': {
                                "postStatus": false
                            }
                        }
                    }
                }
            }
        };
        console.log("query", JSON.stringify(param));
        Dazzle.postData(Url, param).then(res => {
            if (res.code > 0) {
                let prods = res.resolve;
                this.res = res;
                var storeId = [];
                let check8 = 8;
                if (prods.length - this.countitem < 8) {
                    check8 = prods.length - this.countitem;
                }
                for (var i = 0; i < check8; i++) {
                    let theidis = prods[i]['_id'];

                    storeId.push(theidis)
                };


                if (prods.length - this.countitem < 8) {
                    check8 = prods.length - this.countitem;
                }
                let current = "";
                for (var i = 0; i < check8; i++) {
                    current = current +
                        "<change-things id=\"" + storeId[i] + "\"></change-things>";

                    shadow.querySelector(".things-grid").innerHTML = current;
                }
                this.countitem = 8;

            } else {
                alert("error");
            }

        })


    }
    displaymore() {


        let that = this;
        let shadow = this.shadowRoot;
        this.from = this.from + this.size;
        this._search();
    
    }

    // displaymore() {
    //     let that = this;
    //     let shadow = this.shadowRoot;

    //     if (this.res.code > 0) {
    //         let prods = this.res.resolve;

    //         var storeId = [];
    //         let check8 = 8;
    //         if (prods.length - this.countitem < 8) {
    //             check8 = prods.length - this.countitem;
    //         }
    //         for (var i = this.countitem; i < this.countitem + check8; i++) {
    //             let theidis = prods[i]['_id'];
    //             storeId.push(theidis)

    //         };

    //         if (prods.length - this.countitem < 8) {
    //             check8 = prods.length - this.countitem;
    //         }

    //         for (var i = 0; i < check8; i++) {
    //             let addi = document.createElement('change-things');
    //             addi.setAttribute('id', storeId[i])
    //             shadow.querySelector(".things-grid").appendChild(addi);

    //         }
    //         this.countitem += 8;
    //     } else {
    //         alert("error");
    //     }

    // }
    static get template() {
        // Template getter must return an instance of HTMLTemplateElement.
        // The html helper function makes this easy.
        return html `
        <style>
        * {
            font-family: sans-serif, Microsoft JhengHei;

        }



        hr.moremore {
            width: 70%;
            align-items: center;
        }

        a:link,
        a:visited {
            text-decoration: none;
            color: black;
        }

        a:hover {
            text-decoration: none;

        }


        .titlebutton {
            border-spacing: 50px;
        }

        .catbutton {
            background-color: #f9f9f9;
            text-align: center;
            padding-left: 13px;
            padding-right: 13px;
            border: none;
            width: 110px;
            height: 30px;
            border-radius: 15px;

        }

        .catbutton:hover {
            background-color: #d9d9d9;
            cursor: pointer;
        }


        #container {
            padding-top: 10px;
        }

        .itemsall {
            padding: 50px;
            width: 150px;
            height: 150px;
            background-repeat: no-repeat;

        }



        .profile-finger {
            width: 100%;
        }

        change-like {
            width: 15px;
            height: 15px;
        }

        .profile-grid {
            width: 84%;
            padding-left: 8%;
            padding-right: 8%;
            display: grid;
            grid-row-gap: 20px;
            grid-column-gap: 15px;
            grid-template-columns: 100%;
            grid-template-rows: 1fr 2fr 4fr;
            background-color: cornsilk;
            padding-top: 20px;
            padding-bottom: 20px;
        }

        .short-profile-grid {
            display: grid;
            grid-column-gap: 15px;
            grid-template-columns: 59% 12% 12% 12%;
            background-color: white;
            border: 2px solid gainsboro;
            padding: 30px;
            padding-left: 4%;
            padding-right: 4%;
        }

        .detail-profile-grid {
            display: grid;
            grid-row-gap: 10px;
            grid-template-rows: 2fr 1fr 1fr 1fr 1fr;
            background-color: white;
            border: 2px solid gainsboro;
            padding: 20px;
            padding-left: 4%;
            padding-right: 4%;
        }

        .things-profile {
            background-color: white;
            border: 2px solid gainsboro;
        }


        #a1,
        #a2 {
            display: inline-block;
            font-size: 15px;
        }

        #a3 {
            float: right;
        }

        .button {
            margin-left: 4%;
            margin-right: 4%;
            margin-top: 41px;
        }

        .buttonGray {
            width: 150px;
            background-color: gray;
            color: black;
            border-radius: 2px;
            height: 30px;
            font-size: 16px;
            margin-right: 10px;
        }

        #left1 {
            float: left;
        }

        #left2 {
            float: left;
        }

        #left3 {
            float: left;
        }

        #right1 {
            float: right;
        }

        #right2 {
            float: right;
            padding-top: 4px;
        }

        #right3 {
            float: right;
        }

        #right4 {
            float: right;
            padding-top: 4px;
        }



        /* @media (height > 600px) {
            body { line-height: 1.4; }
        } */



        .things-grid {
            display: grid;
            width: 100%;
            grid-row-gap: 15px;
            padding-bottom: 50px;
            grid-column-gap: 30px;
            grid-row-gap: 40px;
            grid-template-columns: repeat(4, 1fr);
            background-color: white;
        }

        change-item {
            width: 100%;

        }

        svg.title_tags {
            width: 100%;
            height: 30px;
            padding-top: 10px;

        }

        svg.s_title_tags {
            margin: 5px;
            height: 15px;
            width: 80px;
            border-radius: 2px;
            padding-top: 10px;


        }

        change-things {
            border: 0px solid gainsboro;
            /* padding: 16px; */
            height: 100%;
            width: 100%;
        }

        /* .itemspic{
            width:200px;
            height:180px;
            padding-top:20px;
            background-size: contain;
            background-position: center;
            text-align: center;
            background-repeat: no-repeat;
            align-items: center;

        } */

        .img {
            width: 270px;
            height: 230px;
            background-size: contain;
            background-position: center center;
            /* background-repeat: no-repeat; */
            margin: 1%;
            background-image: url(./img/channel_banner/1.jpg);
            background-repeat: no-repeat;

        }

        .time {
            font-size: 6px;
        }

        .circle {
            margin: 5px;
            height: 20px;
            width: 20px;


        }

        #cat_all {
            background-color: #efefef;
            text-align: center;
            padding-left: 13px;
            padding-right: 13px;
            border: none;
            width: 110px;
            height: 30px;
            border-radius: 15px;
        }

        #cat_all:hover {
            cursor: pointer;
        }

        #cat_all:hover {
            background-color: #999999;
        }

        .price {
            font-size: 13px;
            padding-top: 10px;
            padding-bottom: 10px;

        }

        .name {
            font-size: 13px;
        }

        .small {
            font-size: 15px;

        }

        #usericon {
            height: 40px;
        }

        .initemtitle {

            font-size: 25px;
            margin-left: 10px;
            font-weight: 900;
        }

        .productname2 {
            font-size: 15px;
            font-weight: 600;
            margin-top: 10px;

        }

        .addmoreitems:hover {
            text-decoration: underline;
            cursor: pointer;
        }

        .addmoreitems {
            align-items: center;
            border: none;
            background-color: transparent;
            font-size: 25px;
        }

        @media (max-width: 992px) {
            .things-grid-middle-mobile {
                display: grid;
                width: 100%;
                height: 100%;
                grid-row-gap: 15px;
                padding-bottom: 50px;
                grid-column-gap: 30px;
                grid-row-gap: 40px;
                grid-template-columns: repeat(3, 1fr);
                background-color: white;
            }

        }

        @media (max-width: 768px) {
            .things-grid-small-mobile {
                display: grid;
                height: 100%;
                grid-row-gap: 15px;
                padding-bottom: 50px;
                grid-column-gap: 15px;
                grid-row-gap: 40px;
                grid-template-columns: repeat(2, 1fr);
                background-color: white;
            }
        }

        .svg {
            background-image: url('/img/loading.svg');
            position: relative;
            background-size: 30px;
            background-position: center center;
            background-repeat: no-repeat;
            width: 100%;
            min-height:30px;

        }

    </style>



    <div class="titlebutton"></div>
    <svg class="title_tags">
        <polygon points="0,0 90,0 70,25 0,25" style="fill:#E84D4D;stroke:#E84D4D;stroke-width:0">
        </polygon>
        <text x="5" y="17" fill="white">最新商品</text>
    </svg>

    <div class="things-grid things-grid-small-mobile things-grid-middle-mobile" id="blank"></div>

    <div style="text-align: center; padding-bottom: 10px;">
        <vaadin-button on-click="displaymore" style="cursor: pointer;">更多</vaadin-button>
    </div>
    `;
    }
}

// Register the element with the browser.
customElements.define('change-itemspecial', dzElm);