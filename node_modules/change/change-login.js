import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-text-field/vaadin-email-field.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-text-field/vaadin-password-field.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

import './change-reset.js';

/* <script async defer src="https://connect.facebook.net/en_US/sdk.js"></script>
<script async defer src="https://apis.google.com/js/platform.js"></script> */



/* <meta name="google-signin-scope" content="profile email">
<meta name="google-signin-client_id" content="755964351228-2emctcoq1o2nj5vpqitv4j28411jj7jk.apps.googleusercontent.com"></meta> */

class dzElm extends PolymerElement {
  static get properties () {
    return {
    
    };
  }

  constructor() {
    super();
    this.setMeta();
    this.loadAsyncScript('https://connect.facebook.net/en_US/sdk.js');
    this.loadAsyncScript('https://apis.google.com/js/platform.js');
    this.userManager = new DataPackage('_user');
  }

  setMeta(){
      let meta = document.createElement('meta');
      meta.setAttribute('name','google-signin-scope');
      meta.setAttribute('content','profile email');
      document.head.appendChild(meta);

      let meta2 = document.createElement('meta');
      meta2.setAttribute('name','google-signin-client_id');
      meta2.setAttribute('content','755964351228-2emctcoq1o2nj5vpqitv4j28411jj7jk.apps.googleusercontent.com');
      document.head.appendChild(meta2);
  }
  ready() {
      super.ready();

      this.status = false;
      let that = this;
      this.shadowRoot.querySelector('#changePassword1').addEventListener("keypress", function(e) {
          var key = e.which || e.keyCode || 0;
          if (key === 13) {
              that._login();
          }

      });
      FB.getLoginStatus(function(response) {
          console.log('FB', response);
          if (response.status === "connected") {
              //if we do have a non-null response.session, call FB.logout(),
              //the JS method will log the user out of Facebook and remove any authorization cookies
              // that.log();
          }

          if (!response.session) {
              // window.location = "/mysite/Login.aspx";
              var googleUser = {};

              gapi.load('auth2', function() {
                  // Retrieve the singleton for the GoogleAuth library and set up the client.
                  auth2 = gapi.auth2.init({
                      client_id: '755964351228-2emctcoq1o2nj5vpqitv4j28411jj7jk.apps.googleusercontent.com',
                      cookiepolicy: 'single_host_origin',
                      // Request scopes in addition to 'profile' and 'email'
                      //scope: 'additional_scope'
                  });
                  attachSignin(that.shadowRoot.querySelector('#customBtn'));
              });

              function attachSignin(element) {
                  console.log(element.id);
                  auth2.attachClickHandler(element, {},
                      function onSignIn(googleUser) {
                          console.log("Signed in: " +
                              googleUser.getBasicProfile());
                          var profile = googleUser.getBasicProfile();
                          console.log("myprofile", profile);
                          let param = {
                              "platform": "Google",
                              "name": profile.getName(),
                              "email": profile.getEmail(),
                              "head": profile.getImageUrl()
                          };
                          let name = profile.getName();
                          let email = profile.getEmail();
                          let head = profile.getImageUrl();

                          function signOut() {
                              var auth2 = gapi.auth2.getAuthInstance();
                              auth2.signOut().then(function() {
                                  console.log('User signed out.');
                              });
                          };
                          that.loginByThirdParty('Google', name, email, head);
                          // _fb_register(name, email)
                      },
                      function(error) {
                          alert("Google登入需要先允許使用第三方Cookie");
                      });
              }
              return;
          }

      });

}
_forgot() {
    console.log('forgot password');
    let shadow = this.shadowRoot;
    let that = this;
    let dialog = shadow.querySelector('vaadin-dialog');
    Dazzle.closeDialog(dialog)
    Dazzle.popup(dialog, "change", "change-reset", "300px", "300px");
}

_register() {
    Dazzle.dzFire('close-login', {});
    // let that = this;
    // console.log('Register', json);
    // // let user = new DataPackage("_user");

    // return new Promise(function(resolve, reject) {
    //     that.userManager.saveData(json['email'], json).then(res => {
    //         console.log('Resolve');
    //         resolve();
    //     }, err => {
    //         console.log('Reject');
    //         reject();
    //     });
    // });


}


google() {

    document.querySelector('.g-signin2 .abcRioButtonContentWrapper').click();
}
log() {
    let url = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
    let link = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";
    let that = this;


    // user is now logged out
    FB.login(function(response) {
        console.log("response", response);
        if (response.authResponse) {
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', {
                fields: 'name, email'
            }, function(response) {
                console.log('Good to see you, ' + JSON.stringify(response) + '.' + response.email);
                let email = response.email;
                let name = response.name;
                let head = "https://graph.facebook.com/" + response.id + "/picture?type=normal";

                that.loginByThirdParty('facebook', name, email, head);
            });
        } else {
            console.log('User cancelled login or did not fully authorize.');
        }
    }, {
        scope: 'email'
    });



}
loginByThirdParty(platform, name, email, head) {
    let that = this;
    let json = {
        'id': email
    };
    that.userManager.loadData(email).then(res=>{
    // that.userManager.matchDataNosort(json).then(res => {
            // let all = res.resolve;
            console.log(res);
            let pw = generatePassword();
            if (Object.keys(res).length) {
                that.logWithPasswd(email, res['password']);
                // data attribute doesn't exist
            } else {
                that._fb_register(platform, name, email, head).then(res => {
                    that.logWithPasswd(email, '!@#$%^#$%');
                });
            }
            // if (res.length)
            //     that.logWithPasswd(email, res[0]['password']);
            // else {
            //     that._fb_register(platform, name, email, head).then(res => {
            //         that.logWithPasswd(email, '!@#$%^#$%');
            //     });
            // }
        },
        err => {
            console.log("error la change login");
        });
        function isEmpty(obj) {
            for(var prop in obj) {
                if(obj.hasOwnProperty(prop)) {
                return false;
                }
            }
        }
}
checkLoginState() { // Called when a person is finished with the Login Button.
    FB.getLoginStatus(function(response) { // See the onlogin handler
        statusChangeCallback(response);
    });
}

statusChangeCallback(response) { // Called with the results from FB.getLoginStatus().
    console.log('statusChangeCallback');
    console.log(response); // The current login status of the person.
    if (response.status === 'connected') { // Logged into your webpage and Facebook.
        testAPI();
    } else { // Not logged into your webpage or we are unable to tell.

    }
}

testAPI() { // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
        console.log('Successful login for: ' + response);
    });
}


_fb_register(platform, name, email, head) {

    // {
    //                 "id": email,
    //                 "username": username,
    //                 "area": area,
    //                 "email": email,
    //                 "phone": phone,
    //                 "password": password,
    //                 "createTime": now,
    //                 "head": head,

    //             }

    let now = new Date().getTime();
    let registerUrl = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
    let user = {
            "id":email,
            "username": name,
            "area": '全港',
            "email": email,
            "password": '!@#$%^#$%',
            "isPromotionMsg": false,
            "platform": platform,
            'head': head,
            "numberRate": 0,
            "goodsNum": 0,
            "createTime": now,
            "isPromotionMsg": false,
            "likeProduct": [],
            "score": 2.5,
            "history": [],
            "isAdmin": false,
            "isFanpage": false,
            "platform": platform,
            "banner": "https://www.gettv.hk/Website%20Design/profile%20page/img/profile%20banner/company-profile-banner.png",
            "status": true,
            "alias":"_me"                    
    };
    let that = this;
    return new Promise(function(resolve, reject) {

        that.userManager.saveData(email,user).then(res=>{
            resolve();
        },err=>{
            reject();
        });
    });
    // let params = {
    //     "action": "changeregister",
    //     "id": email,
    //     "user":{
    //         "username": name,
    //         "area": '全港',
    //         "email": email,
    //         "password": '!@#$%^#$%',
    //         "isPromotionMsg": false,
    //         "platform": platform,
    //         'head': head,
    //         "numberRate": 0,
    //         "goodsNum": 0,
    //         "createTime": now,
    //         "isPromotionMsg": false,
    //         "likeProduct": [],
    //         "score": 5,
    //         "history": [],
    //         "isAdmin": false,
    //         "isFanpage": false,
    //         "platform": platform,
    //         "banner": "https://www.gettv.hk/Website%20Design/profile%20page/img/profile%20banner/company-profile-banner.png",
    //         "status": false
    //     }

    // };
    // console.log("Params", params);
    // return new Promise(function(resolve, reject) {

    //     Dazzle.postData(registerUrl, params).then(res => {
    //         // alert(res.text);
    //         console.log('Res', res);

    //         // that.userManager.getAllData().then(re => {
    //         //     console.log('Result', re);
    //         // });

    //         if (res.code > 0) {
    //             resolve();
    //             // console.log(res);
    //             // this.fileManager = new AwsPackage(res.resolve);
    //             // this.fileManager.saveFile('json/user-' + res.resolve.id + '.json', JSON.stringify(res.resolve));

    //         } else
    //             reject();
    //     });
    // });
}



_login() {
    let shadow = this.shadowRoot;
    let that = this;
    let uid = shadow.querySelector('#changeEmail1').value;
    let password = shadow.querySelector('#changePassword1').value;
    if (uid === "") {
        alert('Email不可以為空');
    } else {
        if (password === "") {
            alert('密碼不可以為空');
        } else {
            console.log('Login',uid,password);
            this.logWithPasswd(uid, password);
        }
    }
}


logWithPasswd(uid, password) {

    let loginUrl = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
    let params = {
        "action": "login",
        "login": uid,
        "password": password
    };
    console.log("Login JSON", params);
    Dazzle.postData(loginUrl, params).then(res => {
        console.log("Login", res);
        if (res.code > 0) {
            console.log("Result1", res.resolve);
            console.log("Result2", res.resolve.length);
            if (res.resolve) {
                let user = res.resolve;
                if (user['status'] == false) {
                    alert("你的帳號已被停用，請聯絡管理員")
                } else {
                    // if (user.token == "" || user.token == null || user.token == undefined) {
                    store.set('change-user', user);
                    location.reload();
                    // } else if (user.token == "1") {
                    //     alert("你已經被取消了用戶資格");
                    // } else {
                    //     alert("請先進行電郵驗證");
                    // }
                }
            } else {
                alert("用戶不存在，請註冊後登入");
            }
        } else {
            // alert('登入失敗');
        }
    });
}


loadAsyncScript(url){
    let script = document.createElement('script');
    script.setAttribute('async','');
    script.setAttribute('defer','');
    script.setAttribute('src',url);
    document.head.appendChild(script);
}
  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>

    #customBtn {
      display: inline-block;
      background: white;
      color: #444;
      width: 100%;
      border-radius: 5px;
      border: thin solid #888;
      box-shadow: 1px 1px 1px grey;
      white-space: nowrap;
    }
    #customBtn:hover {
      cursor: pointer;
    }
    span.label {
      font-family: serif;
      font-weight: normal;
    }
    span.icon {
      background: url('https://developers.google.com/identity/sign-in/g-normal.png') transparent 5px 50% no-repeat;
      display: inline-block;
      vertical-align: middle;
      width: 42px;
      height: 42px;
    }
    span.buttonText {
      display: inline-block;
      vertical-align: middle;
      font-size: 14px;
      font-weight: bold;
      /* Use the Roboto font that is loaded in the <head> */
    }


            .login-grid {
                text-align: center;
                display: grid;
                grid-row-gap: 5px;
                grid-column-gap: 1px;
                grid-template-columns: 40% 40%;
                grid-template-rows: repeat(7，1fr);
                justify-content: center;
                align-content: flex-end;
            }

            .font-sizeh1 {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 1;
                grid-row-end: 2;
                padding-top: 4%;
                font-size: 200%;
            }

            button.logoFacebook {
                grid-column-start: 1;
                grid-column-end: 2;
                grid-row-start: 2;
                grid-row-end: 3;
                height: 44px;
                width: 100%;
                background-color: #3B5998;
                color: white;
                border-radius: 3px;
                font-size: 100%;
            }

            img.logoFacebook {
                height: 25px;
                width: auto;
                background-color: #3B5998;
            }

            button.logoGoogle {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 2;
                grid-row-end: 3;
                height: 44px;
                width: 100%;
                border-radius: 3px;
                background-color: white;
                color: black;
                font-size: 100%;
            }

            img.logoGoogle {
                height: 25px;
                width: auto;
                background-color: white;
            }

            .email {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 3;
                grid-row-end: 4;
            }

            #changeEmail1 {
                width: 100%;
            }

            button#forgot {
                height: 40px;
                width: 100%;
                background-color: white;
                font-size: 12px;
                color: black;
                border: none;
                border-radius: 3px;
            }

            button#forgot:hover {
                text-decoration: underline;
                cursor: pointer;
            }

            button#forgot:active {
                text-decoration: underline;
                border: none;
            }

            .password {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 4;
                grid-row-end: 5;
            }

            #changePassword1 {
                width: 100%;
            }

            button.login-login {
                height: 40px;
                width: 100%;
                background-color: #F0846C;
                font-size: 130%;
                color: white;
                border: none;
                border-radius: 3px;
            }

            button.login-register {
                height: 40px;
                width: 100%;
                background-color: #F06C6C;
                font-size: 130%;
                color: white;
                border-radius: 3px;
                border: none;
            }

            #forgetPassword {
                grid-column-start: 1;
                grid-column-end: 3;
                grid-row-start: 7;
                grid-row-end: 8;
            }
        </style>
        <style include="icon-styles"></style>
        <div class="g-signin2" data-onsuccess="onSignIn"></div>
        <div class="login-grid">
            <span class="font-sizeh1">登入</span>
            <!-- <div>
                <button on-click="log" class="logoFacebook">
                    <img src="img/icon/Facebook.png" class="logoFacebook">&nbspFacebook
                </button>

                <div id="fb-root"></div>
                <div class="fb-login-button" data-size="large" data-button-type="login_with" data-layout="default"
                    data-auto-logout-link="false" data-use-continue-as="false" data-width=""></div>
            </div>
            <div>
                <div id="googlesignin">
                    <slot> </slot>
                </div>

                <button class="logoGoogle"><img src="img/icon/Google.png" class="logoGoogle">&nbspGoogle</button>
            </div> -->
            <div>
                <button on-click="log" class="logoFacebook">
                    <img src="/img/icon/Facebook.png" class="logoFacebook">&nbspFacebook
                </button>

                <div id="fb-root"></div>

            </div>
            <div>
                <!-- <div id="gSignIn" class="g-signin2" data-onsuccess="onSignIn"></div> -->
                <div id="gSignInWrapper">
                    <div id="customBtn" class="customGPlusSignIn">
                      <span class="icon"></span>
                      <span class="buttonText">Google</span>
                    </div>
                  </div>
                <!-- <slot></slot> -->
            </div>

            <div class="email">
                <vaadin-email-field id="changeEmail1" placeholder="Email" name=" email"
                    error-message="Please enter a valid email address" required clear-button-visible>
                </vaadin-email-field>
            </div>
            <div class="password">
                <vaadin-password-field id="changePassword1" placeholder="password" required>
                </vaadin-password-field>
            </div>
            <div>
                <button on-click="_login" class="login-login">登入</button>
            </div>
            <div>
                <button class="login-register" on-click="_register">註冊</button>
            </div>
            <span id="forgetPassword">
                <button id="forgot" on-click="_forgot">忘記密碼?</button>

            </span>
            <vaadin-dialog></vaadin-dialog>
            <vaadin-dialog id="registerpop"></vaadin-dialog>

        </div>
    `;
  }
}

// Register the element with the browser.
customElements.define('change-login', dzElm);

function handleSessionResponse(response) {
    //if we dont have a session (which means the user has been logged out, redirect the user)
    if (!response.session) {
        // window.location = "/mysite/Login.aspx";
        return;
    }

    //if we do have a non-null response.session, call FB.logout(),
    //the JS method will log the user out of Facebook and remove any authorization cookies
    FB.logout(handleSessionResponse);
}

function generatePassword() {
    var length = 8,
        charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
        retVal = "";
    for (var i = 0, n = charset.length; i < length; ++i) {
        retVal += charset.charAt(Math.floor(Math.random() * n));
    }
    return retVal;
}

function onSignIn(googleUser) {
    console.log("running google");
    var profile = googleUser.getBasicProfile();
    console.log("myprofile", profile);
    let param = {
        "platform": "Google",
        "name": profile.getName(),
        "email": profile.getEmail()
    };
    store.set("change-platform", param);
    document.querySelector('.googleloginname').click();
}



function signOut() {
    var auth2 = gapi.auth2.getAuthInstance();
    auth2.signOut().then(function() {
        console.log('User signed out.');
    });
}