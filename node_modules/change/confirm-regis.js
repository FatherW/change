import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

class dzElm extends PolymerElement {
  static get properties () {
    return {
    
    };
  }

  constructor() {
    super();

  }
  ready() {
      super.ready();
      console.log("READY HERE:");

      //make sure dz-loader run first
      document.addEventListener('dz-ready', e => {
          // console.log('uid',Dazzle.uid);
          this.tokManager = new DataPackage('token');
          this.saveManager = new DataPackage('_user');

          let loc = location.search;
          let token = "";
          for (i = 7; i < loc.length; i++) {
              token += loc[i]
          }
          // console.log("loc:", token);

          this.tokManager.loadData(token).then(res => {
              this.verifyTok(res); //tok res
          });
      });

}

verifyTok(x) {
    //x = tok res
    let res = x;
    console.log("res:", res);

    let now = Date.now();
    // console.log("now:", now);

    if (res['type'] == "register") {
        if (now < res['expireDate']) {
            console.log("this token is still valid!");
            this.statusTrue(res['userId'], res['id']); //tok userId, tok id
        } else {
            alert("This token is expired!");
        }
    } else {
        alert("this token is not used to verify registration!");
    }

}

statusTrue(x, z) {
    //x = tok userId, z = tok id
    let y = {
        "status": true
    }
    this.saveManager.saveData(x, y).then(res => {
        // console.log("saveData:", res);
        console.log("updated status!")
        this.autoLogin(z);
    });
}

autoLogin(x) {
    //x = tok id
    console.log("autologin:", x);
    let loginUrl =
        "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
    let params = {
        "action": "loginByToken",
        "token": x,
    };
    Dazzle.postData(loginUrl, params).then(res => {
        console.log("loginByToken", res);
        if (res.code > 0) {
            let user = res.resolve;
            store.set('change-user', user);
            console.log("AUTO LOGIN SUCCESS!");
        } else {
            alert("ERR: AUTO LOGIN Fail!");
        }
    });

}
  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
   
    <style>
    * {
        color: black;
        font-family: sans-serif, Microsoft JhengHei;
    }

    body {
        overflow: hidden;
    }

    #content {
        width: 40%;
        margin: 0 auto;
    }

    h1 {
        margin-top: 20px;
        margin-bottom: 20px;
    }

    a {
        color: blue;
    }
</style>
<div id="content">
    <h1>註冊成功:</h1>
    <h3>恭喜！你已成功註冊帳戶，一起減廢，為環保出一分力。</h3>
    <br>
    <h3>以後只需透過電腦或手機瀏覽，即可上載物品平台，讓全港看見！</h3>
    <a href="http://www.gettv.hk/">www.gettv.hk</a>
    <br>
    <h3>Get TV 讓你生活Get 多啲</h3>

</div>
    `;
  }
}

// Register the element with the browser.
customElements.define('confirm-regis', dzElm);

