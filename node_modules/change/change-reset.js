import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import { Dazzle } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';
import "https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-text-field/vaadin-email-field.js";
Dazzle.loadScript("https://www.gettv.hk/bower_components/crypto-js/crypto-js.js");


class changereset extends PolymerElement {
    static get properties() {
        return {

        };
    }

    constructor() {
        super();
    }
    ready() {
        super.ready();
    }
    _reset() {

        let shadow = this.shadowRoot;
        let that = this;
        let email = shadow.querySelector('#changeEmail1').value;
        if (email === "") {
            alert('Email不可以為空');
        } else {
            //GENERATE REG TOK
            var tok = Date.now();
            // console.log("tok:", tok);
            var expireDate = tok + 604800000; //604800000 = 1 week time in milliseconds
            // console.log("expireDate:", expireDate);
            // this.forgetpwTok(tok, email, expireDate);

            let json = {
                "email": email,
                "action": 'reset'
            }
            let token = Polymer.encryptToken(json);

            let resetUrl =
                "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
            let params = {
                "action": "sendEmail",
                "email": email,
                "token": token
            };
            console.log("Reset JSON", params);
            Polymer.postData(resetUrl, params).then(res => {
                if (res.code > 0) {
                    alert('重置密碼電郵發送成功');
                } else {
                    alert('此電郵未註冊過，重置失敗');
                }
            });
        }

    }
    sendResetEmail(email, token) {
        Polymer.getContent('/email-template/sendresetemail.html').then(html => {
            html = html.replace("[[token]]", token);
            Polymer.sendEmail(email, "重設你的密碼", html).then(res => { alert('成功發送重設電郵'); }, err => { alert('不能發送，請檢查電郵是否正確') });
        });
    }

    forgetpwTok(a, b, c) {
        let shadow = this.shadowRoot;
        let that = this;
        let link = "https://41khtanrje.execute-api.ap-northeast-1.amazonaws.com/prod/Dazzle-elasticSearchController";

        // console.log("a:", a);
        // console.log("b:", b);
        // console.log("c:", c);
        let param = {
            "action": "addData",
            "index": "change",
            "type": "token",
            "id": a,
            "body": {
                "id": a,
                "userId": b,
                "expireDate": c,
                "type": "forgetpw"
            }
        };
        Polymer.postData(link, param).then(res => {
            if (res.code > 0) {
                console.log("forgetpw tok is generated!")
            } else {
                alert("fail to generate forgetpw tok!");
            }
        });

    }
    static get template() {
        // Template getter must return an instance of HTMLTemplateElement.
        // The html helper function makes this easy.
        return html `
    
        <style>
            .reset-grid {
                text-align: center;
                display: grid;
                grid-row-gap: 20px;
                grid-column-gap: 15px;
                grid-template-rows: repeat(4，1fr);
                justify-content: center;
                align-content: end;
            }

            .font-sizeh1 {
                padding-top: 4%;
                font-size: 200%;
            }

            button.logoFacebook {
                grid-column-start: 1;
                grid-column-end: 2;
                grid-row-start: 2;
                grid-row-end: 3;
                height: 44px;
                width: 100%;
                background-color: #3B5998;
                color: white;
                border-radius: 3px;
                font-size: 100%;
            }

            img.logoFacebook {
                height: 25px;
                width: auto;
                background-color: #3B5998;
            }

            button.logoGoogle {
                grid-column-start: 2;
                grid-column-end: 3;
                grid-row-start: 2;
                grid-row-end: 3;
                height: 44px;
                width: 100%;
                border-radius: 3px;
                background-color: white;
                color: black;
                font-size: 100%;
            }

            img.logoGoogle {
                height: 25px;
                width: auto;
                background-color: white;
            }

            .email {
                padding: 1px;
            }

            #changeEmail1 {
                width: 100%;
            }
            button.login-login {
                height: 40px;
                width: 60%;
                background-color: #F0846C;
                font-size: 130%;
                color: white;
                border: none;
                border-radius: 3px;
            }


            #forgetPassword {
                padding: 1px;
            }
        </style>

        <div class="reset-grid">
            <span class="font-sizeh1">重設密碼</span>
            <span id="forgetPassword">
                輸入電郵地址來重設密碼
            </span>

            <div class="email">
                <vaadin-email-field id="changeEmail1" placeholder="Email" name=" email"
                    error-message="Please enter a valid email address" required clear-button-visible>
                </vaadin-email-field>
            </div>
            <div>
                <button on-click="_reset" class="login-login">重設密碼</button>
            </div>
        </div>

    `;
    }
}

// Register the element with the browser.
customElements.define('change-reset', changereset);