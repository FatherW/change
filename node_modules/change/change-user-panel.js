import { PolymerElement, html } from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@polymer/polymer/polymer-element.js';
import 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@vaadin/vaadin-dialog/vaadin-dialog.js';
import {Dazzle} from 'https://d25k6mzsu7mq5l.cloudfront.net/node_modules/@dazzle/dz-dazzle/dz-library.js';

console.log('User Panel');
// window.Change = window.Change || {};
// window.Change.changeUserPanel = changeUserPanel;

    function generatePassword() {
        var length = 8,
            charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
            retVal = "";
        for (var i = 0, n = charset.length; i < length; ++i) {
            retVal += charset.charAt(Math.floor(Math.random() * n));
        }
        return retVal;
    }

    
class dzElm extends PolymerElement {
  static get properties () {
    return {
    
    };
  }

  constructor() {
    // Dazzle.loadComponent('change', 'change-login');
super();
    // Dazzle.importHref('/bower_components/change/change-login.html');
    // Dazzle.importHref('/bower_components/change/change-register.html');


    
    this.userManager = new DataPackage('_user');
    let user = store.get('change-user') || null;
    console.log('Change User',user);
    if (user) {
        // this.userManager.getDataByCache(user['_id']).then(res=>{
        //     store.set('subUser',res); 

        this.user = user;
        this.fileManager = new AwsPackage(user);

        this.profilePic = this.user['head'] || 'https://devshift.biz/wp-content/uploads/2017/04/profile-icon-png-898.png';
        this.profileUrl = "/user/_me";

        // if (!this.user['alias'])
        //     this.profileUrl = "/user/_me";
        // else {
        //     if (this.user.isFanpage)
        //         this.profileUrl = '/page/'+this.user['alias'];
        //     else
        //        this.profileUrl = '/user/'+this.user['alias'];
        // }                       


                // this.profileUrl = '/user.html?'+user['_id'];
        // });
    }





}
reAlias(i){
let alias = this.user['username'];
alias = alias.replace(/^\s+|\s+$/gm,'')
alias = alias.replace(/ /gm,'-');
alias = alias.replace(/\//gm,'-');
if (i>0)
alias = alias+'-'+i;
this.userManager.matchData({"alias":alias}).then(res=>{
if (!res.length)
    this.user['alias'] = alias;                    
else{
    i++;
    this.reAlias(i);
}
console.log('Change Alias',res,res.length);
});
}

saveUserPage(){
let that = this;

let html = document.createElement('html');
let head = document.createElement('head');
let body = document.createElement('body');

let meta = document.createElement('meta');
meta.setAttribute('name','user-id');
meta.setAttribute('content',this.user['id']);
Dazzle.getContent('/user.html').then(content=>{
let parser = new DOMParser();
let doc = parser.parseFromString(content, "text/html");

head.innerHTML = doc.head.innerHTML;
body.innerHTML = doc.body.innerHTML;
// body.innerHTML = 
console.log('HTML',head.innerHTML,body.innerHTML);

head.appendChild(meta);
html.appendChild(head);
html.appendChild(body);
this.fileManager.saveHtml('user/'+this.user['alias'],html.outerHTML);
});



}
_logout = function(){
// store.set('change-user', null);
store.clearAll();
FB.logout(function(response) {
console.log(response);
});
location.replace("/index.html");
}

_login= function() {

Dazzle.loadChangeComponent('change','change-login');
    let shadow = this.shadowRoot;
    let that = this;
    let user = store.get('change-user');
    if (!user) {
        let dialog = shadow.querySelector('vaadin-dialog');
        let dzPopup = document.createElement('change-login');
        dzPopup.dialog = dialog;
        Dazzle.componentPopup(dzPopup,'350px','400px');
        // Dazzle.popup(dialog, "change", "change-login", "350px", "400px");

    } else {
        Dazzle.subUser = user;
        Dazzle.subUser['root']  = 'change';
    }

}

_register= function() {
    Dazzle.loadChangeComponent('change','change-register');
    let shadow = this.shadowRoot;
    let that = this;
    let dialog = shadow.querySelector('vaadin-dialog');
    let dzPopup;
    let user = store.get('change-user');
    if (user == null) {
        dzPopup = document.createElement('change-register');
        dzPopup.dialog = dialog;
        Dazzle.componentPopup(dzPopup,'400px','800px');

        // Dazzle.popup(dialog, "change", "change-register", "400px", "600px");
    } else {
        store.set('change-user', null);

        FB.logout(function(response) {
            console.log(response);
        });
        location.replace("/index.html");


    }
}
logWithPasswd= function(uid, password) {

    let loginUrl = "https://0fnc1pmdce.execute-api.ap-northeast-1.amazonaws.com/default/changeMiscFc";
    let params = {
        "action": "login",
        "login": uid,
        "password": password
    };
    console.log("Login JSON", params);
    Dazzle.postData(loginUrl, params).then(res => {
        console.log("Login", res);
        if (res.code > 0) {
            console.log("Result1", res.resolve);
            console.log("Result2", res.resolve.length);
            if (res.resolve) {
                let user = res.resolve;
                // if (user.token == "" || user.token == null || user.token == undefined) {
                store.set('change-user', user);
                location.reload();
                // } else if (user.token == "1") {
                //     alert("你已經被取消了用戶資格");
                // } else {
                //     alert("請先進行電郵驗證");
                // }
            } else {
                alert("用戶不存在，請註冊後登入");
            }
        } else {
            // alert('登入失敗');
        }
    });
}

isLogin(){
    let user = store.get('change-user') || null;
    if (user)
        return true;
    else
        return false;
}
initUser(user){
    console.log("current user cookie", user);
        this.shadowRoot.querySelector('#register').innerHTML = ' / 登出';
        if (user['head'] == "") {
            user['head'] = "/img/head.svg";
        }
        let a = document.createElement('a');
        let img = document.createElement('img');
        let src = user['head'] || 'https://devshift.biz/wp-content/uploads/2017/04/profile-icon-png-898.png';
        if (user['alias'])
            a.setAttribute('href', '/user/'+user['alias']);
        else
            a.setAttribute('href', '/user.html?'+user['id']);
        
        img.setAttribute('src', src);
        a.appendChild(img);
        let login = this.shadowRoot.querySelector('#login');
        login.innerHTML = '';
        login.appendChild(a);
        console.log("user JSON:", JSON.stringify(user));
}
ready() {
    super.ready();
    let user = store.get('change-user') || null;

    // if (user) {
    //     console.log("current user cookie", user);
    //     this.shadowRoot.querySelector('#register').innerHTML = ' / 登出';
    //     if (user['head'] == "") {
    //         user['head'] = "/img/head.svg";
    //     }
    //     let a = document.createElement('a');
    //     let img = document.createElement('img');
    //     let src = user['head'] || 'https://devshift.biz/wp-content/uploads/2017/04/profile-icon-png-898.png';
    //     if (user['alias'])
    //         a.setAttribute('href', '/user/'+user['alias']);
    //     else
    //         a.setAttribute('href', '/user.html?'+user['id']);
        
    //     img.setAttribute('src', src);
    //     a.appendChild(img);
    //     let login = this.shadowRoot.querySelector('#login');
    //     login.innerHTML = '';
    //     login.appendChild(a);
    //     console.log("user JSON:", JSON.stringify(user));
    // }


    let s = this.shadowRoot;
    document.addEventListener('close-myself', e => {
        s.querySelector('vaadin-dialog#register').opened = false;
        let dialog = s.querySelector('vaadin-dialog#register');
        Dazzle.popup(dialog, "change", 'change-login', "350px", "400px");
    });
    document.addEventListener('close-login', e => {
        s.querySelector('vaadin-dialog').opened = false;
        let dialog = s.querySelector('vaadin-dialog#register');
        Dazzle.popup(dialog, "change", 'change-register', "40%", "90%");
    });
    console.log("hhhhhhhhh", document.querySelector('.googleloginname').innerHTML);
    document.querySelector('.googleloginname').addEventListener('click', e => {
        console.log("running inside addevent");
        this.logingoogle();
    })
}

  static get template () {
    // Template getter must return an instance of HTMLTemplateElement.
    // The html helper function makes this easy.
    return html`
    <style>
            * {
                font-family: sans-serif, Microsoft JhengHei;

            }

            .hide {
                display: none;
            }

            button {
                background: none;
                border: none;
                height: 75px;
                color: #7F7F7F;
                cursor: pointer;
            }


            img {
                height: 40px;
                width: 40px;
                border-radius: 9999999999999px;
            }

            #before {
                display: inline-flex;
            }

            .logining {
                display: inline-flex;
            }
        </style>
        <template is="dom-if" if="{{isLogin()}}">
            <div id="before" class="logining" part="login">
                <button id="register" on-click="_logout">/ 登出</button>
                <button id="login">
                    <a href$="{{profileUrl}}">
                        <img src$="{{profilePic}}" />
                    </a>
                </button>
            </div>            
        </template>
        <template is="dom-if" if="{{!isLogin()}}">
            <div id="before" class="logining" part="login">
                <button id="register" on-click="_register">/ 註冊</button>
                <button id="login" on-click="_login">/ 登入</button>
            </div>
        </template>
        <vaadin-dialog></vaadin-dialog>
        <!-- <vaadin-dialog id="registerpop"></vaadin-dialog> -->

    `;
  }
}

// Register the element with the browser.
customElements.define('change-user-panel', dzElm);

